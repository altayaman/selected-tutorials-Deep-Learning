<!DOCTYPE html>
<!-- saved from url=(0101)http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/ -->
<html lang="en-US" prefix="og: http://ogp.me/ns#" class=" js csstransforms3d csstransitions" style="min-height: 100%;"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/form"></script><script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/form(1)"></script>

<title>Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery</title>

<link rel="pingback" href="http://machinelearningmastery.com/xmlrpc.php">

<!-- Start Visual Website Optimizer Asynchronous Code -->
<script type="text/javascript" async="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/cc.js"></script><script type="text/javascript" async="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/9556588.js"></script><script src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/296263687421164" async=""></script><script async="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/fbevents.js"></script><script async="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/analytics.js"></script><script type="text/javascript">
var _vwo_code=(function(){
var account_id=270912,
settings_tolerance=2000,
library_tolerance=2500,
use_existing_jquery=false,
f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
</script><script src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/j.php" type="text/javascript"></script>
<!-- End Visual Website Optimizer Asynchronous Code -->

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport">

<!-- This site is optimized with the Yoast SEO plugin v4.6 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/">
<link rel="publisher" href="https://plus.google.com/u/0/b/117073416089354242117/+MachinelearningmasteryHome/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery">
<meta property="og:description" content="A powerful and popular recurrent neural network is the long short-term model network or LSTM. It is widely used because the architecture overcomes the vanishing and exposing gradient problem that plagues all recurrent neural networks, allowing very large and very deep networks to be created. Like other recurrent neural networks, LSTM networks maintain state, and …">
<meta property="og:url" content="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/">
<meta property="og:site_name" content="Machine Learning Mastery">
<meta property="article:publisher" content="https://www.facebook.com/Machine-Learning-Mastery-1429846323896563/">
<meta property="article:section" content="Deep Learning">
<meta property="article:published_time" content="2016-07-28T05:00:09+10:00">
<meta property="article:modified_time" content="2017-03-31T11:14:37+10:00">
<meta property="og:updated_time" content="2017-03-31T11:14:37+10:00">
<meta property="og:image" content="http://machinelearningmastery.com/wp-content/uploads/2016/07/Understanding-Stateful-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg">
<meta property="og:image:width" content="640">
<meta property="og:image:height" content="425">
<!-- / Yoast SEO plugin. -->

<link rel="dns-prefetch" href="http://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="Machine Learning Mastery » Feed" href="http://feeds.feedburner.com/MachineLearningMastery">
<link rel="alternate" type="application/rss+xml" title="Machine Learning Mastery » Comments Feed" href="http://machinelearningmastery.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="Machine Learning Mastery » Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras Comments Feed" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/feed/">
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/machinelearningmastery.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7.4"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),!(j.toDataURL().length<3e3)&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,65039,8205,55356,57096),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,55356,57096),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55357,56425,55356,57341,8205,55357,56507),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55357,56425,55356,57341,55357,56507),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/wp-emoji-release.min.js" type="text/javascript" defer=""></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="stylesheet" id="crayon-css" href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/crayon.min.css" type="text/css" media="all">
<link rel="stylesheet" id="crayon-theme-classic-css" href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/classic.css" type="text/css" media="all">
<link rel="stylesheet" id="crayon-font-monaco-css" href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/monaco.css" type="text/css" media="all">
<link rel="stylesheet" id="swiftype-css" href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/autocomplete.css" type="text/css" media="all">
<link rel="stylesheet" id="woo-testimonials-css-css" href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/testimonials.css" type="text/css" media="all">
<link rel="stylesheet" id="theme-stylesheet-css" href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/style.css" type="text/css" media="all">
<!-- This site uses the Google Analytics by MonsterInsights plugin v6.1.7 - Using Analytics tracking - https://www.monsterinsights.com/ -->
<script type="text/javascript" data-cfasync="false">
	/* Function to detect opted out users */
	function __gaTrackerIsOptedOut() {
		return document.cookie.indexOf(disableStr + '=true') > -1;
	}

	/* Disable tracking if the opt-out cookie exists. */
	var disableStr = 'ga-disable-UA-44039733-3';
	if ( __gaTrackerIsOptedOut() ) {
		window[disableStr] = true;
	}

	/* Opt-out function */
	function __gaTrackerOptout() {
	  document.cookie = disableStr + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
	  window[disableStr] = true;
	}

	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','__gaTracker');

	__gaTracker('create', 'UA-44039733-3', 'auto');
	__gaTracker('set', 'forceSSL', true);
	__gaTracker('send','pageview');
</script>
<!-- / Google Analytics by MonsterInsights -->
<!--[if lt IE 9]>
<link href="http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/themes/canvas-new/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/jquery.js"></script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/jquery-migrate.min.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"http:\/\/machinelearningmastery.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/crayon.min.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var swiftypeParams = {"engineKey":"EQnbutcu7sAwoF7N5nzx"};
/* ]]> */
</script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/install_swiftype.min.js"></script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/third-party.min.js"></script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/modernizr.min.js"></script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/general.min.js"></script>
<link rel="https://api.w.org/" href="http://machinelearningmastery.com/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://machinelearningmastery.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://machinelearningmastery.com/wp-includes/wlwmanifest.xml"> 
<link rel="shortlink" href="http://machinelearningmastery.com/?p=2941">
<link rel="alternate" type="application/json+oembed" href="http://machinelearningmastery.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fmachinelearningmastery.com%2Funderstanding-stateful-lstm-recurrent-neural-networks-python-keras%2F">
<link rel="alternate" type="text/xml+oembed" href="http://machinelearningmastery.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fmachinelearningmastery.com%2Funderstanding-stateful-lstm-recurrent-neural-networks-python-keras%2F&amp;format=xml">
<!-- Facebook Pixel Code -->
<script>
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');

fbq('init', '296263687421164');
fbq('track', "PageView");</script>
<noscript>&lt;img height="1" width="1" style="display:none"
src="https://www.facebook.com/tr?id=296263687421164&amp;ev=PageView&amp;noscript=1"
/&gt;</noscript>
<!-- End Facebook Pixel Code -->
<!-- Custom CSS Styling -->
<style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:10px;padding-bottom:10px;border:0px solid ;}
#logo .site-title a {font:bold 40px/1em Helvetica Neue, Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em Helvetica Neue, Helvetica, sans-serif;color:#999999;}
body, p { font:300 14px/1.5em Helvetica Neue, Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 28px/1.1em Helvetica Neue, Helvetica, sans-serif;color:#222222;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#222222}
.post-meta { font:300 12px/1.5em Helvetica Neue, Helvetica, sans-serif;color:#999999; }
.entry, .entry p{ font:300 15px/1.5em Helvetica Neue, Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em &quot;Helvetica Neue&quot;, Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em Helvetica Neue, Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em &quot;Helvetica Neue&quot;, Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em Helvetica Neue, Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em &quot;Helvetica Neue&quot;, Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em Helvetica Neue, Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em Helvetica Neue, Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em Helvetica Neue, Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation ul.cart a.cart-contents, #navigation .cart-contents #navigation ul.rss, #navigation ul.nav-search, #navigation ul.nav-search a { font:300 14px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#666666; } #navigation ul.rss li a:before, #navigation ul.nav-search a.search-contents:before { color:#666666;}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li:hover > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li:hover > ul  { left: 0; }
#navigation { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em Helvetica Neue, Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em Helvetica Neue, Helvetica, sans-serif;color:#999999; }
#footer {border-top:1px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.wooslider-theme-magazine .slide-title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.wooslider-theme-magazine .slide-content p, .wooslider-theme-magazine .slide-excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title a {font:bold 18px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.wooslider-theme-business .has-featured-image .slide-title { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.wooslider-theme-business .has-featured-image .slide-title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.wooslider-theme-business .has-featured-image .slide-content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.wooslider-theme-business .has-featured-image .slide-excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style>

<!-- Woo Shortcodes CSS -->
<link href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/shortcodes.css" rel="stylesheet" type="text/css">

<!-- Custom Stylesheet -->
<link href="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/custom.css" rel="stylesheet" type="text/css">

<!-- Theme version -->
<meta name="generator" content="Canvas 5.9.21">
<meta name="generator" content="WooFramework 6.2.8">
<link rel="icon" href="http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/uploads/2016/09/cropped-icon-32x32.png" sizes="32x32">
<link rel="icon" href="http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/uploads/2016/09/cropped-icon-192x192.png" sizes="192x192">
<link rel="apple-touch-icon-precomposed" href="http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/uploads/2016/09/cropped-icon-180x180.png">
<meta name="msapplication-TileImage" content="http://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon-270x270.png">
<script src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/can-i-show.js"></script><style id="fit-vids-style">.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style><style type="text/css">
  /* === Form-Specific Styles === */

  #drip-2211 .drip-content,
  #drip-2211 .drip-header {
    background: rgb(9,123,156) !important;
    background: rgba(9,123,156,0.90) !important;
  }

  #drip-2211 .drip-content h3 {
    color: #333333 !important;
    font-size: 21px !important;
  }

  #drip-2211 .drip-submit-button {
    background-color: #333333 !important;
    font-size: 12px !important;
  }

  #drip-2211 .drip-submit-button:hover {
    background-color: #191919 !important;
  }

  #drip-2211 .drip-submit-button:active {
    background-color: #000000 !important;
  }

  #drip-2211 dl dt,
  #drip-2211 .drip-content .drip-description,
  #drip-2211 .drip-errors {
    font-size: 13px !important;
  }

  #drip-2211 .drip-text-field {
    font-size: 14px !important;
  }

  /* === Reset styles === */

  .drip-tab h1,
  .drip-tab h2,
  .drip-tab h3,
  .drip-tab div,
  .drip-tab dl,
  .drip-tab dt,
  .drip-tab dd,
  .drip-tab p,
  .drip-tab a,
  .drip-tab .drip-text-field,
  .drip-tab .drip-text-field:focus,
  .drip-tab .drip-submit-button {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    float: none;
    width: auto;
    background-image: none;
    letter-spacing: 0;
    -webkit-box-shadow: none;
       -moz-box-shadow: none;
            box-shadow: none;
    -webkit-text-shadow: none !important;
       -moz-text-shadow: none !important;
            text-shadow: none !important;
  }

  .drip-tab a {
    text-decoration: none;
  }

  .drip-tab :focus {
    outline: 0;
  }

  /* === Clearfix === */

  .drip-clearfix:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
  * html .drip-clearfix             { zoom: 1; } /* IE6 */
  *:first-child+html .drip-clearfix { zoom: 1; } /* IE7 */

  /* === Main Container === */

  .drip-tab-container * {
    box-sizing: content-box;
  }

  /* === Content === */

  .drip-tab .drip-content {
    margin: 0;
    padding: 5px;
    width: 330px;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    box-sizing: border-box;
    -webkit-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
       -moz-box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
            box-shadow: 0px 0px 20px rgba(0,0,0,0.25);
  }

  .drip-tab.bottom .drip-content {
    bottom: -800px;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom.left .drip-content {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-content {
    right: 40px;
  }

  .drip-tab.image-left .drip-content,
  .drip-tab.image-right .drip-content {
    width: 510px;
  }

  .drip-tab.side .drip-content {
    top: 10%;
  }

  .drip-tab.side.right .drip-content {
    right: -550px;
    -webkit-border-radius: 8px 0 0 8px;
       -moz-border-radius: 8px 0 0 8px;
            border-radius: 8px 0 0 8px;
    -webkit-transition: right 200ms ease-in;
       -moz-transition: right 200ms ease-in;
         -o-transition: right 200ms ease-in;
            transition: right 200ms ease-in;
  }

  .drip-tab.side.left .drip-content {
    left: -550px;
    -webkit-border-radius: 0 8px 8px 0;
       -moz-border-radius: 0 8px 8px 0;
            border-radius: 0 8px 8px 0;
    -webkit-transition: left 200ms ease-in;
       -moz-transition: left 200ms ease-in;
         -o-transition: left 200ms ease-in;
            transition: left 200ms ease-in;
  }

  .drip-tab.mobile .drip-content {
    width: 100% !important;
    bottom: -800px;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.drip-scrollable .drip-content {
    overflow-y: scroll;
  }

  /* === Header === */

  .drip-tab .drip-header {
    margin: 0;
    padding: 0;
    position: fixed;
    font-size: 100%;
    font: inherit;
    z-index: 10000;
    color: #333;
    vertical-align: baseline;
    text-align: left;
    -webkit-border-radius: 8px 8px 0 0;
       -moz-border-radius: 8px 8px 0 0;
            border-radius: 8px 8px 0 0;
    -webkit-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
       -moz-box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
            box-shadow: 0px 10px 28px rgba(0,0,0,0.36);
  }

  .drip-tab.bottom .drip-header {
    width: 330px;
    bottom: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.bottom .drip-header.drip-hidden {
    bottom: -800px;
  }

  .drip-tab.bottom.left .drip-header {
    left: 40px;
  }

  .drip-tab.bottom.right .drip-header {
    right: 40px;
  }

  .drip-tab.bottom.image-left .drip-header,
  .drip-tab.bottom.image-right .drip-header {
    width: 510px;
  }

  .drip-tab.side .drip-header {
    width: 330px;
    top: 10%;
  }

  .drip-tab.side.right .drip-header {
    right: -100px;
    -webkit-transition: right 400ms ease-in;
       -moz-transition: right 400ms ease-in;
         -o-transition: right 400ms ease-in;
            transition: right 400ms ease-in;
    -webkit-transform: rotate(-90deg) !important;
       -moz-transform: rotate(-90deg) !important;
        -ms-transform: rotate(-90deg) !important;
         -o-transform: rotate(-90deg) !important;
            transform: rotate(-90deg) !important;
    -webkit-transform-origin: right center;
       -moz-transform-origin: right center;
         -o-transform-origin: right center;
            transform-origin: right center;
  }

  .drip-tab.side.right .drip-header.drip-hidden {
    right: -100px;
  }

  .drip-tab.side.left .drip-header {
    left: -100px;
    -webkit-transition: left 400ms ease-in;
       -moz-transition: left 400ms ease-in;
         -o-transition: left 400ms ease-in;
            transition: left 400ms ease-in;
    -webkit-transform: rotate(90deg) !important;
       -moz-transform: rotate(90deg) !important;
        -ms-transform: rotate(90deg) !important;
         -o-transform: rotate(90deg) !important;
            transform: rotate(90deg) !important;
    -webkit-transform-origin: left center;
       -moz-transform-origin: left center;
         -o-transform-origin: left center;
            transform-origin: left center;
  }

  .drip-tab.side.left .drip-header.drip-hidden {
    left: -100px;
  }

  .drip-tab.mobile .drip-header {
    width: 100% !important;
    bottom: 0;
    left: 0;
    -webkit-border-radius: 0;
       -moz-border-radius: 0;
            border-radius: 0;
    -webkit-transition: bottom 200ms ease-in;
       -moz-transition: bottom 200ms ease-in;
         -o-transition: bottom 200ms ease-in;
            transition: bottom 200ms ease-in;
  }

  .drip-tab.mobile .drip-header.drip-hidden {
    bottom: -300px;
  }

  /* === Header Toggle === */

  .drip-tab .drip-toggle {
    display: block;
    text-decoration: none;
    padding: 10px 50px 10px 20px; /* extra padding for the arrow */
  }

  /* === Teaser === */

  .drip-tab .drip-header h2 {
    display: block;
    margin: 0 !important;
    padding: 0 !important;
    border: 0 !important;
    font-size: 14px !important;
    line-height: 1.5 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #fff !important;
    clear: none !important;
    letter-spacing: 0 !important;
    width: auto !important;
  }

  /* === Arrows === */

  .drip-tab .drip-header span.drip-arrow {
    display: block;
    position: absolute;
    margin: 0;
    padding: 0;
    width: 0;
    height: 0;
    line-height: 0;
    top: 17px;
    right: 32px;
  }

  /* === Panel === */

  .drip-tab .drip-content > div.drip-panel {
    padding: 15px;
    background-color: #fff;
    -webkit-border-radius: 6px;
       -moz-border-radius: 6px;
            border-radius: 6px;
  }

  /* === Powered By === */

  .drip-tab .drip-powered-by {
    padding: 8px;
    margin-bottom: -5px;
    font-family: Helvetica, Arial, sans-serif;
    text-align: left;
    font-weight: bold;
    font-size: 10px;
    line-height: 16px;
    color: #ffffff;
    letter-spacing: 1px;
    text-align: center;
    text-transform: uppercase;
  }

  .drip-tab .drip-powered-by a {
    color: #ffffff !important;
    text-decoration: underline !important;
    letter-spacing: 1px;
  }

  /* === Content Headings & Paragraphs === */

  .drip-tab .drip-content h3 {
    display: block;
    margin: 0 20px 0 0 !important;
    padding: 0 0 15px 0 !important;
    line-height: 1.4 !important;
    font-weight: bold !important;
    text-align: left !important;
    color: #4477bd !important;
    clear: none !important;
  }

  .drip-tab .drip-content .drip-description {
    margin: 0;
    padding: 0 0 20px 0;
    line-height: 1.6;
    text-align: left;
  }

  .drip-tab.image-left .drip-content .drip-description {
    margin-left: 170px;
  }

  .drip-tab.image-right .drip-content .drip-description {
    margin-right: 170px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content .drip-description {
      margin-left: 0; /* 120px; */
    }

    .drip-tab.image-right .drip-content .drip-description {
      margin-right: 0; /* 120px; */
    }
  }

  .drip-tab .drip-content .drip-description a {
    text-decoration: underline;
  }

  .drip-tab .drip-content .drip-description em {
    font-style: italic;
  }

  .drip-tab .drip-content .drip-description ul,
  .drip-tab .drip-content .drip-description ol {
    list-style-position: outside;
    margin: 8px 0 8px 30px;
  }

  .drip-tab .drip-content .drip-description ul li
  .drip-tab .drip-content .drip-description ol li {
    padding: 0;
  }

  .drip-tab .drip-content img.drip-image {
    margin-bottom: 20px;
  }

  .drip-tab.image-left .drip-content img.drip-image {
    float: left;
    width: 150px;
  }

  .drip-tab.image-right .drip-content img.drip-image {
    float: right;
    width: 150px;
  }

  @media screen and (max-width: 510px) {
    .drip-tab.image-left .drip-content img.drip-image {
      margin-right: 20px;
      width: 100px;
    }

    .drip-tab.image-right .drip-content img.drip-image {
      margin-left: 20px;
      width: 100px;
    }
  }

  .drip-tab .drip-content a.drip-close {
    font-family: Arial, Helvetica, sans-serif;
    margin: -1px 0 0 0;
    float: right;
    font-size: 28px;
    line-height: 15px;
    font-weight: normal;
    color: #333;
    opacity: 0.4;
  }

  .drip-tab .drip-content a.drip-close:hover {
    text-decoration: none;
    cursor: pointer;
    opacity: 0.6;
  }

  /* === Content Subscribe Form === */

  .drip-tab form {
    margin: 0 !important;
    padding: 0 !important;
  }

  .drip-tab dl {
    display: block;
    margin: 0;
    padding: 0;
  }

  .drip-tab dl dt {
    display: block;
    padding: 0 0 5px 0;
    font-weight: bold;
  }

  .drip-tab dl.no-labels dt {
    display: none;
  }

  .drip-tab dl dd {
    display: block;
    padding: 0 0 10px 0;
  }

  .drip-tab .drip-text-field {
    margin: 0 !important;
    padding: 6px !important;
    height: auto !important;
    width: 100% !important;
    color: #333 !important;
    background-color: #fff !important;
    border: 1px solid #c4c4c4 !important;
    -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
       -moz-box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
            box-shadow: inset 0 0 3px rgba(0,0,0,0.18) !important;
    -webkit-border-radius: 4px !important;
       -moz-border-radius: 4px !important;
            border-radius: 4px !important;
    -webkit-box-sizing: border-box !important;
       -moz-box-sizing: border-box !important;
        -ms-box-sizing: border-box !important;
            box-sizing: border-box !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
  }

  .drip-tab .drip-text-field::-webkit-input-placeholder { /* WebKit browsers */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: #999999 !important;
  }
  .drip-tab .drip-text-field:-ms-input-placeholder { /* Internet Explorer 10+ */
    color: #999999 !important;
  }

  .drip-tab .drip-text-field:focus {
    border-color: #a4a4a4 !important;
    outline: 0;
    background-image: none;
    background-color: #fff !important;
  }

  .drip-tab.mobile .drip-text-field {
    font-size: 16px;
  }

  .drip-tab .drip-errors {
    padding: 5px 0 0 0;
    font-weight: normal;
    color: red;
  }

  .drip-tab .drip-submit-button {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif !important;
    padding: 3px 12px !important;
    color: #ffffff !important;
    font-weight: bold !important;
    line-height: 1.6 !important;
    border: 0 !important;
    -webkit-border-radius: 15px !important;
       -moz-border-radius: 15px !important;
            border-radius: 15px !important;
    cursor: pointer !important;
    background-image: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
    height: auto;
  }

  .drip-tab .drip-submit-button:hover {
    background-image: none !important;
  }

  .drip-tab .drip-submit-button:active {
    background-image: none !important;
  }

</style></head>
<body class="post-template-default single single-post postid-2941 single-format-standard chrome alt-style-default two-col-left width-960 two-col-left-960">
<div id="wrapper">

	<div id="inner-wrapper">

	<h3 class="nav-toggle icon"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<a href="http://machinelearningmastery.com/" title="Making developers awesome at machine learning"><img src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/MachineLearningMastery.png" alt="Machine Learning Mastery"></a>
<span class="site-title"><a href="http://machinelearningmastery.com/">Machine Learning Mastery</a></span>
<span class="site-description">Making developers awesome at machine learning</span>
</div>
	    <div class="header-widget">
	        <div id="text-3" class="widget widget_text">			<div class="textwidget"><br>
<div style="font-size:12pt;">
<a href="http://machinelearningmastery.com/start-here"><strong>Start Here</strong></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://machinelearningmastery.com/blog">Blog</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://machinelearningmastery.com/products">Books</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://machinelearningmastery.com/about">About</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://machinelearningmastery.com/contact">Contact</a>
</div></div>
		</div><div id="search-3" class="widget widget_search"><div class="search_main">
    <form method="get" class="searchform" action="http://machinelearningmastery.com/">
        <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == &#39;Search...&#39;) {this.value = &#39;&#39;;}" onblur="if (this.value == &#39;&#39;) {this.value = &#39;Search...&#39;;}" autocomplete="off">
        <button type="submit" class="fa fa-search submit" name="submit" value="Search"></button>
    </form>
    <div class="fix"></div>
</div></div>	    </div>
	
	</header>
	<nav id="navigation" class="col-full" role="navigation">

	
	<section class="menus">

		<a href="http://machinelearningmastery.com/" class="nav-home"><span>Home</span></a>

	<h3>Empty Menu</h3>	<div class="side-nav">
		</div><!-- /#side-nav -->

	</section><!-- /.menus -->

	<a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#top" class="nav-close"><span>Return to Content</span></a>

</nav>
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-2941 post type-post status-publish format-standard has-post-thumbnail hentry category-deep-learning">
	<header>
	<h1 class="title entry-title">Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="http://machinelearningmastery.com/author/jasonb/" title="Posts by Jason Brownlee" rel="author">Jason Brownlee</a></span></span> <span class="small">on</span> <abbr class="date time published updated" title="2016-07-28T05:00:09+1000">July 28, 2016</abbr>  <span class="small">in</span> <span class="categories"><a href="http://machinelearningmastery.com/category/deep-learning/" title="View all items in Deep Learning">Deep Learning</a></span>  </div>
	<section class="entry">
<div id="fsb-social-bar" class="fsb-social-bar fsb-fixed" data-post-id="2941" data-socialite="false" style="width: 623px;"><style type="text/css">            #fsb-social-bar { width: 100%; border-bottom: 1px solid #dbdbdb; border-top: 1px solid #dbdbdb; padding: 10px 0; margin: 0px 0 20px 0; float: left; background: #fff; position: relative; clear: both; }            #fsb-social-bar a { border: 0px !important }            #fsb-social-bar.fsb-fixed { position: fixed; top: -2px; z-index: 99999; }            #fsb-social-bar .fsb-title { display: block; float: left; margin: 3px 20px 0 0; font-size: 16px; font-family: Arial, Helvetica, sans-serif; text-decoration: none; color: #333; }            #fsb-social-bar .fsb-share-facebook { width: 120px; float: left; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-facebook.fsb-hide-count { width: 44px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-twitter { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-twitter.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-google { float: left; width: 105px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-google.fsb-hide-count { width: 33px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-linkedin { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-linkedin.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-pinterest { float: left; width: 115px; padding: 3px 0 2px; height: 25px;}            #fsb-social-bar .fsb-share-pinterest.fsb-hide-count { width: 43px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .socialite { display: block; position: relative; background: url(http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/floating-social-bar/images/fsb-sprite.png) no-repeat scroll 0 0; }            #fsb-social-bar .socialite-loaded { background: none !important; }            #fsb-social-bar .fsb-service-title { display: none; }            #fsb-social-bar a { color: #333; text-decoration: none; font-size: 12px; font-family: Arial, Helvetica, sans-serif; }            #fsb-social-bar .fsb-twitter { width: 105px; height: 25px; background-position: -13px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-twitter .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 69px; color: #333; }            #fsb-social-bar .fsb-google { width: 75px; height: 25px; background-position: -136px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-google .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 41px; color: #333; }            #fsb-social-bar .fsb-google .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-share-google .socialite-loaded .socialite-button{padding: 2px 0 0}            #fsb-social-bar .fsb-facebook { width: 89px; height: 25px; background-position: -231px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-facebook .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 52px; color: #333; }            #fsb-social-bar .fsb-facebook .socialite-button { margin: 0 !important;}            #fsb-social-bar .fsb-share-facebook .socialite-loaded .socialite-button {padding: 2px 0 0}            #fsb-social-bar .fsb-linkedin { width: 105px; height: 25px; background-position: -347px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-linkedin .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 70px; color: #333; }            #fsb-social-bar .fsb-linkedin .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-pinterest { width: 88px; height: 25px; background-position: -484px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-pinterest .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 50px; color: #333; }            #fsb-social-bar .fsb-pinterest .socialite-button { margin: 0 !important; }            .fsb-clear { clear: both; }            .fsb-clear:after { clear:both; content:; display:block; height:0; line-height:0; overflow:auto; visibility:hidden; zoom:1; }            @media (max-width: 768px) { #fsb-social-bar.fsb-fixed { position: relative !important; top: auto !important; } }        </style><div class="fsb-share-facebook fsb-hide-count"><a href="http://www.facebook.com/sharer.php?u=http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/" class="socialite facebook fsb-facebook" data-fsb-service="facebook" data-href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/" data-send="false" data-layout="button_count" data-width="60" data-show-faces="false" rel="nofollow" target="_blank"><span class="fsb-service-title">Facebook</span><span class="fsb-count">0</span></a></div><div class="fsb-share-twitter fsb-hide-count"><a href="https://twitter.com/share?original_referer=http%3A%2F%2Fmachinelearningmastery.com%2F&amp;source=tweetbutton&amp;text=Understanding+Stateful+LSTM+Recurrent+Neural+Networks+in+Python+with+Keras&amp;url=http%3A%2F%2Fmachinelearningmastery.com%2Funderstanding-stateful-lstm-recurrent-neural-networks-python-keras%2F&amp;via=TeachTheMachine" class="socialite twitter fsb-twitter" data-fsb-service="twitter" rel="nofollow" target="_blank" title="Be the first one to tweet this article!"><span class="fsb-service-title">Twitter</span><span class="fsb-count">0</span></a></div><div class="fsb-share-google fsb-hide-count"><a href="https://plus.google.com/share?url=http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/" class="socialite googleplus fsb-google" data-fsb-service="google" data-size="medium" data-href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/" rel="nofollow" target="_blank"><span class="fsb-service-title">Google+</span><span class="fsb-count">0</span></a></div><div class="fsb-share-linkedin fsb-hide-count"><a href="https://www.linkedin.com/cws/share?url=http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/" class="socialite linkedin fsb-linkedin" data-fsb-service="linkedin" data-size="medium" data-href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/" rel="nofollow" target="_blank"><span class="fsb-service-title">LinkedIn</span><span class="fsb-count">0</span></a></div></div><div class="fsb-clear"></div><p>A powerful and popular recurrent neural network is the long short-term model network or LSTM.</p>
<p>It is widely used because the architecture overcomes the vanishing and exposing gradient problem that plagues all recurrent neural networks, allowing very large and very deep networks to be created.</p>
<p>Like other recurrent neural networks, LSTM networks maintain state, and the specifics of how this is implemented in Keras framework can be confusing.</p>
<p>In this post you will discover exactly how state is maintained in LSTM networks by the Keras deep learning library.</p>
<p>After reading this post you will know:</p>
<ul>
<li>How to develop a naive LSTM network for a sequence prediction problem.</li>
<li>How to carefully manage state through batches and features with an LSTM network.</li>
<li>Hot to manually manage state in an LSTM network for stateful prediction.</li>
</ul>
<p>Let’s get started.</p>
<ul>
<li><strong>Update Mar/2017</strong>: Updated example for Keras 2.0.2, TensorFlow 1.0.1 and Theano 0.9.0.</li>
</ul>
<div id="attachment_2942" style="width: 650px" class="wp-caption aligncenter"><img class="size-full wp-image-2942" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Understanding-Stateful-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg" alt="Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras" width="640" height="425" srcset="http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/uploads/2016/07/Understanding-Stateful-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg 640w, http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/uploads/2016/07/Understanding-Stateful-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras-300x199.jpg 300w" sizes="(max-width: 640px) 100vw, 640px"><p class="wp-caption-text">Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras<br>Photo by <a href="https://www.flickr.com/photos/twicepix/7923674788/">Martin Abegglen</a>, some rights reserved.</p></div>
<h2>Problem Description: Learn the Alphabet</h2>
<p>In this tutorial we are going to develop and contrast a number of different LSTM recurrent neural network models.</p>
<p>The context of these comparisons will be a simple sequence prediction problem of learning the alphabet. That is, given a letter of the alphabet, predict the next letter of the alphabet.</p>
<p>This is a simple sequence prediction problem that once understood can be generalized to other sequence prediction problems like time series prediction and sequence classification.</p>
<p>Let’s prepare the problem with some python code that we can reuse from example to example.</p>
<p>Firstly, let’s import all of the classes and functions we plan to use in this tutorial.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479003471763297" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479003471763297-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479003471763297-2">2</div><div class="crayon-num" data-line="crayon-58fd895479003471763297-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479003471763297-4">4</div><div class="crayon-num" data-line="crayon-58fd895479003471763297-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479003471763297-1"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479003471763297-2"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line" id="crayon-58fd895479003471763297-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479003471763297-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line" id="crayon-58fd895479003471763297-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-v">np_utils</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>Next, we can seed the random number generator to ensure that the results are the same each time the code is executed.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547900b752928097" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># fix random seed for reproducibility
numpy.random.seed(7)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547900b752928097-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547900b752928097-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547900b752928097-1"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547900b752928097-2"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>We can now define our dataset, the alphabet. We define the alphabet in uppercase characters for readability.</p>
<p>Neural networks model numbers, so we need to map the letters of the alphabet to integer values. We can do this easily by creating a dictionary (map) of the letter index to the character. We can also create a reverse lookup for converting predictions back into characters to be used later.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547900e788648108" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547900e788648108-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547900e788648108-2">2</div><div class="crayon-num" data-line="crayon-58fd89547900e788648108-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547900e788648108-4">4</div><div class="crayon-num" data-line="crayon-58fd89547900e788648108-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547900e788648108-1"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547900e788648108-2"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line" id="crayon-58fd89547900e788648108-3"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547900e788648108-4"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547900e788648108-5"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p>Now we need to create our input and output pairs on which to train our neural network. We can do this by defining an input sequence length, then reading sequences from the input alphabet sequence.</p>
<p>For example we use an input length of 1. Starting at the beginning of the raw input data, we can read off the first letter “A” and the next letter as the prediction “B”. We move along one character and repeat until we reach a prediction of “Z”.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479010641857565" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># prepare the dataset of input to output pairs encoded as integers
seq_length = 1
dataX = []
dataY = []
for i in range(0, len(alphabet) - seq_length, 1):
	seq_in = alphabet[i:i + seq_length]
	seq_out = alphabet[i + seq_length]
	dataX.append([char_to_int[char] for char in seq_in])
	dataY.append(char_to_int[seq_out])
	print seq_in, '-&gt;', seq_out</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479010641857565-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479010641857565-2">2</div><div class="crayon-num" data-line="crayon-58fd895479010641857565-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479010641857565-4">4</div><div class="crayon-num" data-line="crayon-58fd895479010641857565-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479010641857565-6">6</div><div class="crayon-num" data-line="crayon-58fd895479010641857565-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479010641857565-8">8</div><div class="crayon-num" data-line="crayon-58fd895479010641857565-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479010641857565-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479010641857565-1"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479010641857565-2"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line" id="crayon-58fd895479010641857565-3"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479010641857565-4"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479010641857565-5"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479010641857565-6"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">:</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479010641857565-7"><span class="crayon-h">	</span><span class="crayon-v">seq_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479010641857565-8"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">seq_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479010641857565-9"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">seq_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479010641857565-10"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_out</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p>We also print out the input pairs for sanity checking.</p>
<p>Running the code to this point will produce the following output, summarizing input sequences of length 1 and a single output character.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479013647437705" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">A -&gt; B
B -&gt; C
C -&gt; D
D -&gt; E
E -&gt; F
F -&gt; G
G -&gt; H
H -&gt; I
I -&gt; J
J -&gt; K
K -&gt; L
L -&gt; M
M -&gt; N
N -&gt; O
O -&gt; P
P -&gt; Q
Q -&gt; R
R -&gt; S
S -&gt; T
T -&gt; U
U -&gt; V
V -&gt; W
W -&gt; X
X -&gt; Y
Y -&gt; Z</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479013647437705-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-2">2</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-4">4</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-6">6</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-8">8</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-10">10</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-12">12</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-14">14</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-16">16</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-18">18</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-20">20</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-22">22</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479013647437705-24">24</div><div class="crayon-num" data-line="crayon-58fd895479013647437705-25">25</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479013647437705-1">A -&gt; B</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-2">B -&gt; C</div><div class="crayon-line" id="crayon-58fd895479013647437705-3">C -&gt; D</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-4">D -&gt; E</div><div class="crayon-line" id="crayon-58fd895479013647437705-5">E -&gt; F</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-6">F -&gt; G</div><div class="crayon-line" id="crayon-58fd895479013647437705-7">G -&gt; H</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-8">H -&gt; I</div><div class="crayon-line" id="crayon-58fd895479013647437705-9">I -&gt; J</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-10">J -&gt; K</div><div class="crayon-line" id="crayon-58fd895479013647437705-11">K -&gt; L</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-12">L -&gt; M</div><div class="crayon-line" id="crayon-58fd895479013647437705-13">M -&gt; N</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-14">N -&gt; O</div><div class="crayon-line" id="crayon-58fd895479013647437705-15">O -&gt; P</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-16">P -&gt; Q</div><div class="crayon-line" id="crayon-58fd895479013647437705-17">Q -&gt; R</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-18">R -&gt; S</div><div class="crayon-line" id="crayon-58fd895479013647437705-19">S -&gt; T</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-20">T -&gt; U</div><div class="crayon-line" id="crayon-58fd895479013647437705-21">U -&gt; V</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-22">V -&gt; W</div><div class="crayon-line" id="crayon-58fd895479013647437705-23">W -&gt; X</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479013647437705-24">X -&gt; Y</div><div class="crayon-line" id="crayon-58fd895479013647437705-25">Y -&gt; Z</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0000 seconds] -->
<p>We need to&nbsp;reshape the NumPy array into a format expected by the LSTM networks, that is [<em>samples, time steps, features</em>].</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479015216600155" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), seq_length, 1))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479015216600155-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479015216600155-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479015216600155-1"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479015216600155-2"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>Once reshaped, we can then normalize the input integers to the range 0-to-1, the range of the sigmoid activation functions used by the LSTM network.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479017324529696" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># normalize
X = X / float(len(alphabet))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479017324529696-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479017324529696-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479017324529696-1"><span class="crayon-p"># normalize</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479017324529696-2"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>Finally, we can think of this problem as a sequence classification task, where each of the 26 letters represents a different class. As such, we can convert the output (y) to a one hot encoding, using the Keras built-in function <strong>to_categorical()</strong>.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479019771457207" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># one hot encode the output variable
y = np_utils.to_categorical(dataY)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479019771457207-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479019771457207-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479019771457207-1"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479019771457207-2"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>We are now ready to fit different LSTM models.</p>
<!-- Start Shortcoder content --><p></p><div class="woo-sc-hr"></div><p></p>
<h2 style="text-align: center;">Beat the Math/Theory Doldrums and Start using Deep Learning in your own projects Today, without getting lost in “documentation hell”</h2>
<p style="text-align: center;"><img class="alignleft size-full wp-image-3427" style="border: 0;" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/DeepLearningWithPython-MiniCourse_ipad-300.png" alt="Deep Learning With Python Mini-Course" width="300" height="413">Get my free Deep Learning With Python mini course and develop your own deep nets by the time you’ve finished the first PDF with just a few lines of Python.</p>
<h4 style="text-align: center;">Daily lessons in your inbox for 14 days, and a DL-With-Python “Cheat Sheet” you can download right now.&nbsp;&nbsp;&nbsp;</h4>
<center><a href="https://machinelearningmastery.leadpages.co/leadbox/142d6e873f72a2%3A164f8be4f346dc/5657382461898752/" onclick="__gaTracker(&#39;send&#39;, &#39;event&#39;, &#39;outbound-article&#39;, &#39;https://machinelearningmastery.leadpages.co/leadbox/142d6e873f72a2%3A164f8be4f346dc/5657382461898752/&#39;, &#39;Download Your FREE Mini-Course&#39;);" style="color: #ffffff; text-decoration: none; font-family: Helvetica, Arial, sans-serif; font-weight: bold; font-size: 16px; line-height: 20px; padding: 10px; display: inline-block; max-width: 300px; border-radius: 5px; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 1px; box-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 3px inset, rgba(0, 0, 0, 0.498039) 0px 1px 3px; background: #ffce0a;" target="_blank" data-leadbox="https://machinelearningmastery.leadpages.co/leadbox/142d6e873f72a2%3A164f8be4f346dc/5657382461898752/" data-leadbox-id="142d6e873f72a2:164f8be4f346dc">Download Your FREE Mini-Course</a> <script src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/leadbox-1463166699.js" type="text/javascript" data-leadbox="142d6e873f72a2:164f8be4f346dc" data-url="https://machinelearningmastery.leadpages.co/leadbox/142d6e873f72a2%3A164f8be4f346dc/5657382461898752/" data-config="%7B%7D"></script>&nbsp;</center>
<p style="text-align: center;">&nbsp;</p>
<p></p><div class="woo-sc-hr"></div><p></p><!-- End Shortcoder content -->
<h2>Naive LSTM for Learning One-Char to One-Char Mapping</h2>
<p>Let’s start off by designing a simple LSTM to learn how to predict the next character in the alphabet given the context of just one character.</p>
<p>We will frame the problem as a random collection of one-letter input to one-letter output pairs. As we will see this is a difficult framing of the problem for the LSTM to learn.</p>
<p>Let’s define an LSTM network with 32 units and a single output neuron with a softmax activation function for making predictions. Because this is a multi-class classification problem, we can use the log loss function (called “<strong>categorical_crossentropy</strong>” in Keras), and optimize the network using the ADAM optimization function.</p>
<p>The model is fit over 500 epochs with a batch size of 1.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547901b362613781" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># create and fit the model
model = Sequential()
model.add(LSTM(32, input_shape=(X.shape[1], X.shape[2])))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, y, epochs=500, batch_size=1, verbose=2)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547901b362613781-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547901b362613781-2">2</div><div class="crayon-num" data-line="crayon-58fd89547901b362613781-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547901b362613781-4">4</div><div class="crayon-num" data-line="crayon-58fd89547901b362613781-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547901b362613781-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547901b362613781-1"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547901b362613781-2"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547901b362613781-3"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547901b362613781-4"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547901b362613781-5"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547901b362613781-6"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">500</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p>After we fit the model we can evaluate and summarize the performance on the entire training dataset.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547901e013956024" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># summarize performance of the model
scores = model.evaluate(X, y, verbose=0)
print("Model Accuracy: %.2f%%" % (scores[1]*100))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547901e013956024-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547901e013956024-2">2</div><div class="crayon-num" data-line="crayon-58fd89547901e013956024-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547901e013956024-1"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547901e013956024-2"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547901e013956024-3"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>We can then re-run the training data through the network and generate predictions, converting both the input and output pairs back into their original character format to&nbsp;get a visual idea of how well the network learned the problem.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479020013091690" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># demonstrate some model predictions
for pattern in dataX:
	x = numpy.reshape(pattern, (1, len(pattern), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479020013091690-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479020013091690-2">2</div><div class="crayon-num" data-line="crayon-58fd895479020013091690-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479020013091690-4">4</div><div class="crayon-num" data-line="crayon-58fd895479020013091690-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479020013091690-6">6</div><div class="crayon-num" data-line="crayon-58fd895479020013091690-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479020013091690-8">8</div><div class="crayon-num" data-line="crayon-58fd895479020013091690-9">9</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479020013091690-1"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479020013091690-2"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">pattern </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd895479020013091690-3"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479020013091690-4"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479020013091690-5"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479020013091690-6"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479020013091690-7"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479020013091690-8"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479020013091690-9"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p>The entire code listing is provided below for completeness.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479022124398936" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># Naive LSTM to learn one-char to one-char mapping
import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils
# fix random seed for reproducibility
numpy.random.seed(7)
# define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))
# prepare the dataset of input to output pairs encoded as integers
seq_length = 1
dataX = []
dataY = []
for i in range(0, len(alphabet) - seq_length, 1):
	seq_in = alphabet[i:i + seq_length]
	seq_out = alphabet[i + seq_length]
	dataX.append([char_to_int[char] for char in seq_in])
	dataY.append(char_to_int[seq_out])
	print seq_in, '-&gt;', seq_out
# reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), seq_length, 1))
# normalize
X = X / float(len(alphabet))
# one hot encode the output variable
y = np_utils.to_categorical(dataY)
# create and fit the model
model = Sequential()
model.add(LSTM(32, input_shape=(X.shape[1], X.shape[2])))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, y, epochs=500, batch_size=1, verbose=2)
# summarize performance of the model
scores = model.evaluate(X, y, verbose=0)
print("Model Accuracy: %.2f%%" % (scores[1]*100))
# demonstrate some model predictions
for pattern in dataX:
	x = numpy.reshape(pattern, (1, len(pattern), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479022124398936-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-2">2</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-4">4</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-6">6</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-8">8</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-10">10</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-12">12</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-14">14</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-16">16</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-18">18</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-20">20</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-22">22</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-24">24</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-26">26</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-28">28</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-30">30</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-32">32</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-34">34</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-36">36</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-38">38</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-40">40</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-42">42</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-44">44</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479022124398936-46">46</div><div class="crayon-num" data-line="crayon-58fd895479022124398936-47">47</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479022124398936-1"><span class="crayon-p"># Naive LSTM to learn one-char to one-char mapping</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-2"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-6"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-v">np_utils</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-7"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-8"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-9"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-10"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-11"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-12"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-13"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-14"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-15"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-16"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-17"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-18"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-19"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">:</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-20"><span class="crayon-h">	</span><span class="crayon-v">seq_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-21"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">seq_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-22"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">seq_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-23"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_out</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-24"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-25"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-26"><span class="crayon-p"># normalize</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-27"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-28"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-29"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-30"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-31"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-32"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-33"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-34"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-35"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">500</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-36"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-37"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-38"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-39"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-40"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">pattern </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-41"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-42"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-43"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-44"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-45"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479022124398936-46"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479022124398936-47"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0033 seconds] -->
<p>Running this example produces the following output.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479025442196752" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">Model Accuracy: 84.00%
['A'] -&gt; B
['B'] -&gt; C
['C'] -&gt; D
['D'] -&gt; E
['E'] -&gt; F
['F'] -&gt; G
['G'] -&gt; H
['H'] -&gt; I
['I'] -&gt; J
['J'] -&gt; K
['K'] -&gt; L
['L'] -&gt; M
['M'] -&gt; N
['N'] -&gt; O
['O'] -&gt; P
['P'] -&gt; Q
['Q'] -&gt; R
['R'] -&gt; S
['S'] -&gt; T
['T'] -&gt; U
['U'] -&gt; W
['V'] -&gt; Y
['W'] -&gt; Z
['X'] -&gt; Z
['Y'] -&gt; Z</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479025442196752-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-2">2</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-4">4</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-6">6</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-8">8</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-10">10</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-12">12</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-14">14</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-16">16</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-18">18</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-20">20</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-22">22</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-24">24</div><div class="crayon-num" data-line="crayon-58fd895479025442196752-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479025442196752-26">26</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479025442196752-1">Model Accuracy: 84.00%</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-2">['A'] -&gt; B</div><div class="crayon-line" id="crayon-58fd895479025442196752-3">['B'] -&gt; C</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-4">['C'] -&gt; D</div><div class="crayon-line" id="crayon-58fd895479025442196752-5">['D'] -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-6">['E'] -&gt; F</div><div class="crayon-line" id="crayon-58fd895479025442196752-7">['F'] -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-8">['G'] -&gt; H</div><div class="crayon-line" id="crayon-58fd895479025442196752-9">['H'] -&gt; I</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-10">['I'] -&gt; J</div><div class="crayon-line" id="crayon-58fd895479025442196752-11">['J'] -&gt; K</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-12">['K'] -&gt; L</div><div class="crayon-line" id="crayon-58fd895479025442196752-13">['L'] -&gt; M</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-14">['M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd895479025442196752-15">['N'] -&gt; O</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-16">['O'] -&gt; P</div><div class="crayon-line" id="crayon-58fd895479025442196752-17">['P'] -&gt; Q</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-18">['Q'] -&gt; R</div><div class="crayon-line" id="crayon-58fd895479025442196752-19">['R'] -&gt; S</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-20">['S'] -&gt; T</div><div class="crayon-line" id="crayon-58fd895479025442196752-21">['T'] -&gt; U</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-22">['U'] -&gt; W</div><div class="crayon-line" id="crayon-58fd895479025442196752-23">['V'] -&gt; Y</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-24">['W'] -&gt; Z</div><div class="crayon-line" id="crayon-58fd895479025442196752-25">['X'] -&gt; Z</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479025442196752-26">['Y'] -&gt; Z</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0000 seconds] -->
<p>We can see that this problem is indeed difficult for the network to learn.</p>
<p>The reason is, the poor LSTM units do not have any context to work with. Each input-output pattern is shown to the network in a random order and the state of the network is reset after each pattern (each batch where each batch contains one pattern).</p>
<p>This is abuse of the LSTM network architecture, treating it like a standard multilayer Perceptron.</p>
<p>Next, let’s try a different framing of the problem in order to provide more sequence to the network from which to learn.</p>
<h2>Naive LSTM for a Three-Char Feature Window to One-Char Mapping</h2>
<p>A popular approach to adding more context to data for multilayer Perceptrons is to use the window method.</p>
<p>This is where previous steps in the sequence are provided as additional input features to the network. We can try the same trick to provide more context to the LSTM network.</p>
<p>Here, we increase the sequence length from 1 to 3, for example:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479028603855487" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># prepare the dataset of input to output pairs encoded as integers
seq_length = 3</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479028603855487-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479028603855487-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479028603855487-1"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479028603855487-2"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>Which creates training patterns like:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547902a829995372" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">ABC -&gt; D
BCD -&gt; E
CDE -&gt; F</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547902a829995372-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902a829995372-2">2</div><div class="crayon-num" data-line="crayon-58fd89547902a829995372-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547902a829995372-1">ABC -&gt; D</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902a829995372-2">BCD -&gt; E</div><div class="crayon-line" id="crayon-58fd89547902a829995372-3">CDE -&gt; F</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>Each element in the sequence is then provided as a new input feature to the network. This requires a modification of how the input sequences reshaped in the data preparation step:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547902b201366173" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), 1, seq_length))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547902b201366173-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902b201366173-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547902b201366173-1"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902b201366173-2"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>It also requires a modification for how the sample patterns are reshaped when demonstrating predictions from the model.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547902d163958547" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">x = numpy.reshape(pattern, (1, 1, len(pattern)))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547902d163958547-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547902d163958547-1"><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>The entire code listing is provided below for completeness.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547902f465344832" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># Naive LSTM to learn three-char window to one-char mapping
import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils
# fix random seed for reproducibility
numpy.random.seed(7)
# define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))
# prepare the dataset of input to output pairs encoded as integers
seq_length = 3
dataX = []
dataY = []
for i in range(0, len(alphabet) - seq_length, 1):
	seq_in = alphabet[i:i + seq_length]
	seq_out = alphabet[i + seq_length]
	dataX.append([char_to_int[char] for char in seq_in])
	dataY.append(char_to_int[seq_out])
	print seq_in, '-&gt;', seq_out
# reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), 1, seq_length))
# normalize
X = X / float(len(alphabet))
# one hot encode the output variable
y = np_utils.to_categorical(dataY)
# create and fit the model
model = Sequential()
model.add(LSTM(32, input_shape=(X.shape[1], X.shape[2])))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, y, epochs=500, batch_size=1, verbose=2)
# summarize performance of the model
scores = model.evaluate(X, y, verbose=0)
print("Model Accuracy: %.2f%%" % (scores[1]*100))
# demonstrate some model predictions
for pattern in dataX:
	x = numpy.reshape(pattern, (1, 1, len(pattern)))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547902f465344832-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-2">2</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-4">4</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-6">6</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-8">8</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-10">10</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-12">12</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-14">14</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-16">16</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-18">18</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-20">20</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-22">22</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-24">24</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-26">26</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-28">28</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-30">30</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-32">32</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-34">34</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-36">36</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-38">38</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-40">40</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-42">42</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-44">44</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547902f465344832-46">46</div><div class="crayon-num" data-line="crayon-58fd89547902f465344832-47">47</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547902f465344832-1"><span class="crayon-p"># Naive LSTM to learn three-char window to one-char mapping</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-2"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-6"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-v">np_utils</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-7"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-8"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-9"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-10"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-11"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-12"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-13"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-14"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-15"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-16"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-17"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-18"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-19"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">:</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-20"><span class="crayon-h">	</span><span class="crayon-v">seq_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-21"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">seq_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-22"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">seq_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-23"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_out</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-24"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-25"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-26"><span class="crayon-p"># normalize</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-27"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-28"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-29"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-30"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-31"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-32"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-33"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-34"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-35"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">500</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-36"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-37"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-38"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-39"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-40"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">pattern </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-41"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-42"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-43"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-44"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-45"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547902f465344832-46"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547902f465344832-47"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0032 seconds] -->
<p>Running this example provides the following output.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479032677732877" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">Model Accuracy: 86.96%
['A', 'B', 'C'] -&gt; D
['B', 'C', 'D'] -&gt; E
['C', 'D', 'E'] -&gt; F
['D', 'E', 'F'] -&gt; G
['E', 'F', 'G'] -&gt; H
['F', 'G', 'H'] -&gt; I
['G', 'H', 'I'] -&gt; J
['H', 'I', 'J'] -&gt; K
['I', 'J', 'K'] -&gt; L
['J', 'K', 'L'] -&gt; M
['K', 'L', 'M'] -&gt; N
['L', 'M', 'N'] -&gt; O
['M', 'N', 'O'] -&gt; P
['N', 'O', 'P'] -&gt; Q
['O', 'P', 'Q'] -&gt; R
['P', 'Q', 'R'] -&gt; S
['Q', 'R', 'S'] -&gt; T
['R', 'S', 'T'] -&gt; U
['S', 'T', 'U'] -&gt; V
['T', 'U', 'V'] -&gt; Y
['U', 'V', 'W'] -&gt; Z
['V', 'W', 'X'] -&gt; Z
['W', 'X', 'Y'] -&gt; Z</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479032677732877-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-2">2</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-4">4</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-6">6</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-8">8</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-10">10</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-12">12</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-14">14</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-16">16</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-18">18</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-20">20</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-22">22</div><div class="crayon-num" data-line="crayon-58fd895479032677732877-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479032677732877-24">24</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479032677732877-1">Model Accuracy: 86.96%</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-2">['A', 'B', 'C'] -&gt; D</div><div class="crayon-line" id="crayon-58fd895479032677732877-3">['B', 'C', 'D'] -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-4">['C', 'D', 'E'] -&gt; F</div><div class="crayon-line" id="crayon-58fd895479032677732877-5">['D', 'E', 'F'] -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-6">['E', 'F', 'G'] -&gt; H</div><div class="crayon-line" id="crayon-58fd895479032677732877-7">['F', 'G', 'H'] -&gt; I</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-8">['G', 'H', 'I'] -&gt; J</div><div class="crayon-line" id="crayon-58fd895479032677732877-9">['H', 'I', 'J'] -&gt; K</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-10">['I', 'J', 'K'] -&gt; L</div><div class="crayon-line" id="crayon-58fd895479032677732877-11">['J', 'K', 'L'] -&gt; M</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-12">['K', 'L', 'M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd895479032677732877-13">['L', 'M', 'N'] -&gt; O</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-14">['M', 'N', 'O'] -&gt; P</div><div class="crayon-line" id="crayon-58fd895479032677732877-15">['N', 'O', 'P'] -&gt; Q</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-16">['O', 'P', 'Q'] -&gt; R</div><div class="crayon-line" id="crayon-58fd895479032677732877-17">['P', 'Q', 'R'] -&gt; S</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-18">['Q', 'R', 'S'] -&gt; T</div><div class="crayon-line" id="crayon-58fd895479032677732877-19">['R', 'S', 'T'] -&gt; U</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-20">['S', 'T', 'U'] -&gt; V</div><div class="crayon-line" id="crayon-58fd895479032677732877-21">['T', 'U', 'V'] -&gt; Y</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-22">['U', 'V', 'W'] -&gt; Z</div><div class="crayon-line" id="crayon-58fd895479032677732877-23">['V', 'W', 'X'] -&gt; Z</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479032677732877-24">['W', 'X', 'Y'] -&gt; Z</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>We can see a small lift in performance that may or may not be real. This is a simple problem that we were still not able to learn with LSTMs even with the window method.</p>
<p>Again, this is a misuse of the LSTM network by a poor framing of the problem. Indeed, the sequences of letters are time steps of one feature rather than one time step of separate features. We have given more context to the network, but not more sequence as it expected.</p>
<p>In the next section, we will give more context to the network in the form of time steps.</p>
<h2>Naive LSTM for a Three-Char Time Step Window to One-Char Mapping</h2>
<p>In Keras, the intended use of LSTMs is to provide context in the form of time steps, rather than windowed features like with other network types.</p>
<p>We can take our first example and simply change the sequence length from 1 to 3.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479035621026727" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">seq_length = 3</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479035621026727-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479035621026727-1"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>Again, this creates input-output pairs that look like:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479037914193328" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">ABC -&gt; D
BCD -&gt; E
CDE -&gt; F
DEF -&gt; G</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479037914193328-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479037914193328-2">2</div><div class="crayon-num" data-line="crayon-58fd895479037914193328-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479037914193328-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479037914193328-1">ABC -&gt; D</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479037914193328-2">BCD -&gt; E</div><div class="crayon-line" id="crayon-58fd895479037914193328-3">CDE -&gt; F</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479037914193328-4">DEF -&gt; G</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>The difference is that the reshaping of the input data takes the sequence as a time step sequence of one feature, rather than a single time step of multiple features.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479039643455680" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), seq_length, 1))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479039643455680-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479039643455680-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479039643455680-1"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479039643455680-2"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>This is the correct intended use of providing sequence context to your LSTM in Keras. The full code example is provided below for completeness.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547903b882778013" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># Naive LSTM to learn three-char time steps to one-char mapping
import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils
# fix random seed for reproducibility
numpy.random.seed(7)
# define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))
# prepare the dataset of input to output pairs encoded as integers
seq_length = 3
dataX = []
dataY = []
for i in range(0, len(alphabet) - seq_length, 1):
	seq_in = alphabet[i:i + seq_length]
	seq_out = alphabet[i + seq_length]
	dataX.append([char_to_int[char] for char in seq_in])
	dataY.append(char_to_int[seq_out])
	print seq_in, '-&gt;', seq_out
# reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), seq_length, 1))
# normalize
X = X / float(len(alphabet))
# one hot encode the output variable
y = np_utils.to_categorical(dataY)
# create and fit the model
model = Sequential()
model.add(LSTM(32, input_shape=(X.shape[1], X.shape[2])))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, y, epochs=500, batch_size=1, verbose=2)
# summarize performance of the model
scores = model.evaluate(X, y, verbose=0)
print("Model Accuracy: %.2f%%" % (scores[1]*100))
# demonstrate some model predictions
for pattern in dataX:
	x = numpy.reshape(pattern, (1, len(pattern), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547903b882778013-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-2">2</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-4">4</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-6">6</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-8">8</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-10">10</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-12">12</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-14">14</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-16">16</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-18">18</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-20">20</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-22">22</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-24">24</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-26">26</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-28">28</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-30">30</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-32">32</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-34">34</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-36">36</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-38">38</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-40">40</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-42">42</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-44">44</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903b882778013-46">46</div><div class="crayon-num" data-line="crayon-58fd89547903b882778013-47">47</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547903b882778013-1"><span class="crayon-p"># Naive LSTM to learn three-char time steps to one-char mapping</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-2"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-6"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-v">np_utils</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-7"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-8"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-9"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-10"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-11"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-12"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-13"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-14"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-15"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-16"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-17"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-18"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-19"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">:</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-20"><span class="crayon-h">	</span><span class="crayon-v">seq_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-21"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">seq_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-22"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">seq_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-23"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_out</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-24"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-25"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-26"><span class="crayon-p"># normalize</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-27"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-28"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-29"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-30"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-31"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-32"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-33"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-34"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-35"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">500</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-36"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-37"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-38"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-39"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-40"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">pattern </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-41"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-42"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-43"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-44"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-45"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903b882778013-46"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547903b882778013-47"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0032 seconds] -->
<p>Running this example provides the following output.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547903e570461304" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">Model Accuracy: 100.00%
['A', 'B', 'C'] -&gt; D
['B', 'C', 'D'] -&gt; E
['C', 'D', 'E'] -&gt; F
['D', 'E', 'F'] -&gt; G
['E', 'F', 'G'] -&gt; H
['F', 'G', 'H'] -&gt; I
['G', 'H', 'I'] -&gt; J
['H', 'I', 'J'] -&gt; K
['I', 'J', 'K'] -&gt; L
['J', 'K', 'L'] -&gt; M
['K', 'L', 'M'] -&gt; N
['L', 'M', 'N'] -&gt; O
['M', 'N', 'O'] -&gt; P
['N', 'O', 'P'] -&gt; Q
['O', 'P', 'Q'] -&gt; R
['P', 'Q', 'R'] -&gt; S
['Q', 'R', 'S'] -&gt; T
['R', 'S', 'T'] -&gt; U
['S', 'T', 'U'] -&gt; V
['T', 'U', 'V'] -&gt; W
['U', 'V', 'W'] -&gt; X
['V', 'W', 'X'] -&gt; Y
['W', 'X', 'Y'] -&gt; Z</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547903e570461304-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-2">2</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-4">4</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-6">6</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-8">8</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-10">10</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-12">12</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-14">14</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-16">16</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-18">18</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-20">20</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-22">22</div><div class="crayon-num" data-line="crayon-58fd89547903e570461304-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547903e570461304-24">24</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547903e570461304-1">Model Accuracy: 100.00%</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-2">['A', 'B', 'C'] -&gt; D</div><div class="crayon-line" id="crayon-58fd89547903e570461304-3">['B', 'C', 'D'] -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-4">['C', 'D', 'E'] -&gt; F</div><div class="crayon-line" id="crayon-58fd89547903e570461304-5">['D', 'E', 'F'] -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-6">['E', 'F', 'G'] -&gt; H</div><div class="crayon-line" id="crayon-58fd89547903e570461304-7">['F', 'G', 'H'] -&gt; I</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-8">['G', 'H', 'I'] -&gt; J</div><div class="crayon-line" id="crayon-58fd89547903e570461304-9">['H', 'I', 'J'] -&gt; K</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-10">['I', 'J', 'K'] -&gt; L</div><div class="crayon-line" id="crayon-58fd89547903e570461304-11">['J', 'K', 'L'] -&gt; M</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-12">['K', 'L', 'M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd89547903e570461304-13">['L', 'M', 'N'] -&gt; O</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-14">['M', 'N', 'O'] -&gt; P</div><div class="crayon-line" id="crayon-58fd89547903e570461304-15">['N', 'O', 'P'] -&gt; Q</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-16">['O', 'P', 'Q'] -&gt; R</div><div class="crayon-line" id="crayon-58fd89547903e570461304-17">['P', 'Q', 'R'] -&gt; S</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-18">['Q', 'R', 'S'] -&gt; T</div><div class="crayon-line" id="crayon-58fd89547903e570461304-19">['R', 'S', 'T'] -&gt; U</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-20">['S', 'T', 'U'] -&gt; V</div><div class="crayon-line" id="crayon-58fd89547903e570461304-21">['T', 'U', 'V'] -&gt; W</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-22">['U', 'V', 'W'] -&gt; X</div><div class="crayon-line" id="crayon-58fd89547903e570461304-23">['V', 'W', 'X'] -&gt; Y</div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547903e570461304-24">['W', 'X', 'Y'] -&gt; Z</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>We can see that the model learns the problem perfectly as evidenced by the model evaluation and the example predictions.</p>
<p>But it has learned a simpler problem. Specifically, it has learned to predict the next letter from a sequence of three letters in the alphabet. It can be shown any random sequence of three letters from the alphabet and predict the next letter.</p>
<p>It can not actually enumerate the alphabet. I expect that a larger enough multilayer perception network might be able to learn the same mapping using the window method.</p>
<p>The LSTM networks are stateful. They should be able to learn the whole alphabet sequence, but by default the Keras implementation resets the network state after each training batch.</p>
<h2>LSTM State Within A Batch</h2>
<p>The Keras implementation of LSTMs resets the state of the network after each batch.</p>
<p>This suggests that if we had a batch size large enough to hold all input patterns and if all the input patterns were ordered sequentially, that the LSTM could use the context of the sequence within the batch to better learn the sequence.</p>
<p>We can demonstrate this&nbsp;easily by modifying the first example for learning a one-to-one mapping and increasing the batch size from 1 to the size of the training dataset.</p>
<p>Additionally, Keras shuffles the training dataset before each training epoch. To ensure the training data patterns remain sequential, we can disable this shuffling.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479041328641245" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">model.fit(X, y, epochs=5000, batch_size=len(dataX), verbose=2, shuffle=False)</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479041328641245-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479041328641245-1"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">5000</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">shuffle</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>The network will learn the mapping of characters using the the within-batch sequence, but this context will not be available to the network when making predictions. We can evaluate both the ability of the network to make predictions randomly and in sequence.</p>
<p>The full code example is provided below for completeness.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479043620024924" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># Naive LSTM to learn one-char to one-char mapping with all data in each batch
import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils
from keras.preprocessing.sequence import pad_sequences
# fix random seed for reproducibility
numpy.random.seed(7)
# define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))
# prepare the dataset of input to output pairs encoded as integers
seq_length = 1
dataX = []
dataY = []
for i in range(0, len(alphabet) - seq_length, 1):
	seq_in = alphabet[i:i + seq_length]
	seq_out = alphabet[i + seq_length]
	dataX.append([char_to_int[char] for char in seq_in])
	dataY.append(char_to_int[seq_out])
	print seq_in, '-&gt;', seq_out
# convert list of lists to array and pad sequences if needed
X = pad_sequences(dataX, maxlen=seq_length, dtype='float32')
# reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (X.shape[0], seq_length, 1))
# normalize
X = X / float(len(alphabet))
# one hot encode the output variable
y = np_utils.to_categorical(dataY)
# create and fit the model
model = Sequential()
model.add(LSTM(16, input_shape=(X.shape[1], X.shape[2])))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, y, epochs=5000, batch_size=len(dataX), verbose=2, shuffle=False)
# summarize performance of the model
scores = model.evaluate(X, y, verbose=0)
print("Model Accuracy: %.2f%%" % (scores[1]*100))
# demonstrate some model predictions
for pattern in dataX:
	x = numpy.reshape(pattern, (1, len(pattern), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result
# demonstrate predicting random patterns
print "Test a Random Pattern:"
for i in range(0,20):
	pattern_index = numpy.random.randint(len(dataX))
	pattern = dataX[pattern_index]
	x = numpy.reshape(pattern, (1, len(pattern), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479043620024924-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-2">2</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-4">4</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-6">6</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-8">8</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-10">10</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-12">12</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-14">14</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-16">16</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-18">18</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-20">20</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-22">22</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-24">24</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-26">26</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-28">28</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-30">30</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-32">32</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-34">34</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-36">36</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-38">38</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-40">40</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-42">42</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-44">44</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-46">46</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-48">48</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-50">50</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-52">52</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-54">54</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-56">56</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-58">58</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-60">60</div><div class="crayon-num" data-line="crayon-58fd895479043620024924-61">61</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479043620024924-62">62</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479043620024924-1"><span class="crayon-p"># Naive LSTM to learn one-char to one-char mapping with all data in each batch</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-2"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-6"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-e">np_utils</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-7"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-v">preprocessing</span><span class="crayon-sy">.</span><span class="crayon-e">sequence </span><span class="crayon-e">import </span><span class="crayon-v">pad_sequences</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-8"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-9"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-10"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-11"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-12"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-13"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-14"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-15"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-16"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-17"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-18"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-19"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-20"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">:</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-21"><span class="crayon-h">	</span><span class="crayon-v">seq_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-22"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">seq_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-23"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">seq_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-24"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_out</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-25"><span class="crayon-p"># convert list of lists to array and pad sequences if needed</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-26"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">pad_sequences</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">maxlen</span><span class="crayon-o">=</span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-s">'float32'</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-27"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-28"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-29"><span class="crayon-p"># normalize</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-30"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-31"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-32"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-33"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-34"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-35"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">16</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-36"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-37"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-38"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">5000</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">shuffle</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-39"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-40"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-41"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-42"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-43"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">pattern </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-44"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-45"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-46"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-47"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-48"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-49"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-50"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-51"><span class="crayon-p"># demonstrate predicting random patterns</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-52"><span class="crayon-i">print</span><span class="crayon-h"> </span><span class="crayon-s">"Test a Random Pattern:"</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-53"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-cn">20</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-54"><span class="crayon-h">	</span><span class="crayon-v">pattern_index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-55"><span class="crayon-h">	</span><span class="crayon-v">pattern</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-sy">[</span><span class="crayon-v">pattern_index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-56"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pattern</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-57"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-58"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-59"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-60"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479043620024924-61"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479043620024924-62"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0042 seconds] -->
<p>Running the example provides the following output.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479047439701511" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">Model Accuracy: 100.00%
['A'] -&gt; B
['B'] -&gt; C
['C'] -&gt; D
['D'] -&gt; E
['E'] -&gt; F
['F'] -&gt; G
['G'] -&gt; H
['H'] -&gt; I
['I'] -&gt; J
['J'] -&gt; K
['K'] -&gt; L
['L'] -&gt; M
['M'] -&gt; N
['N'] -&gt; O
['O'] -&gt; P
['P'] -&gt; Q
['Q'] -&gt; R
['R'] -&gt; S
['S'] -&gt; T
['T'] -&gt; U
['U'] -&gt; V
['V'] -&gt; W
['W'] -&gt; X
['X'] -&gt; Y
['Y'] -&gt; Z
Test a Random Pattern:
['T'] -&gt; U
['V'] -&gt; W
['M'] -&gt; N
['Q'] -&gt; R
['D'] -&gt; E
['V'] -&gt; W
['T'] -&gt; U
['U'] -&gt; V
['J'] -&gt; K
['F'] -&gt; G
['N'] -&gt; O
['B'] -&gt; C
['M'] -&gt; N
['F'] -&gt; G
['F'] -&gt; G
['P'] -&gt; Q
['A'] -&gt; B
['K'] -&gt; L
['W'] -&gt; X
['E'] -&gt; F</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479047439701511-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-2">2</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-4">4</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-6">6</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-8">8</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-10">10</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-12">12</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-14">14</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-16">16</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-18">18</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-20">20</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-22">22</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-24">24</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-26">26</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-28">28</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-30">30</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-32">32</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-34">34</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-36">36</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-38">38</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-40">40</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-42">42</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-44">44</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479047439701511-46">46</div><div class="crayon-num" data-line="crayon-58fd895479047439701511-47">47</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479047439701511-1">Model Accuracy: 100.00%</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-2">['A'] -&gt; B</div><div class="crayon-line" id="crayon-58fd895479047439701511-3">['B'] -&gt; C</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-4">['C'] -&gt; D</div><div class="crayon-line" id="crayon-58fd895479047439701511-5">['D'] -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-6">['E'] -&gt; F</div><div class="crayon-line" id="crayon-58fd895479047439701511-7">['F'] -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-8">['G'] -&gt; H</div><div class="crayon-line" id="crayon-58fd895479047439701511-9">['H'] -&gt; I</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-10">['I'] -&gt; J</div><div class="crayon-line" id="crayon-58fd895479047439701511-11">['J'] -&gt; K</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-12">['K'] -&gt; L</div><div class="crayon-line" id="crayon-58fd895479047439701511-13">['L'] -&gt; M</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-14">['M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd895479047439701511-15">['N'] -&gt; O</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-16">['O'] -&gt; P</div><div class="crayon-line" id="crayon-58fd895479047439701511-17">['P'] -&gt; Q</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-18">['Q'] -&gt; R</div><div class="crayon-line" id="crayon-58fd895479047439701511-19">['R'] -&gt; S</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-20">['S'] -&gt; T</div><div class="crayon-line" id="crayon-58fd895479047439701511-21">['T'] -&gt; U</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-22">['U'] -&gt; V</div><div class="crayon-line" id="crayon-58fd895479047439701511-23">['V'] -&gt; W</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-24">['W'] -&gt; X</div><div class="crayon-line" id="crayon-58fd895479047439701511-25">['X'] -&gt; Y</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-26">['Y'] -&gt; Z</div><div class="crayon-line" id="crayon-58fd895479047439701511-27">Test a Random Pattern:</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-28">['T'] -&gt; U</div><div class="crayon-line" id="crayon-58fd895479047439701511-29">['V'] -&gt; W</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-30">['M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd895479047439701511-31">['Q'] -&gt; R</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-32">['D'] -&gt; E</div><div class="crayon-line" id="crayon-58fd895479047439701511-33">['V'] -&gt; W</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-34">['T'] -&gt; U</div><div class="crayon-line" id="crayon-58fd895479047439701511-35">['U'] -&gt; V</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-36">['J'] -&gt; K</div><div class="crayon-line" id="crayon-58fd895479047439701511-37">['F'] -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-38">['N'] -&gt; O</div><div class="crayon-line" id="crayon-58fd895479047439701511-39">['B'] -&gt; C</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-40">['M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd895479047439701511-41">['F'] -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-42">['F'] -&gt; G</div><div class="crayon-line" id="crayon-58fd895479047439701511-43">['P'] -&gt; Q</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-44">['A'] -&gt; B</div><div class="crayon-line" id="crayon-58fd895479047439701511-45">['K'] -&gt; L</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479047439701511-46">['W'] -&gt; X</div><div class="crayon-line" id="crayon-58fd895479047439701511-47">['E'] -&gt; F</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>As we expected, the network is able to use the within-sequence context to learn the alphabet, achieving 100% accuracy on the training data.</p>
<p>Importantly, the network can make accurate predictions for the next letter in the alphabet for randomly selected characters. Very impressive.</p>
<h2>Stateful LSTM for a&nbsp;One-Char to One-Char Mapping</h2>
<p>We have seen that we can break-up our raw data into fixed size sequences and that this representation can be learned by the LSTM, but only to learn random mappings of 3 characters to 1 character.</p>
<p>We have also seen that we can pervert batch size to offer more sequence to the network, but only during training.</p>
<p>Ideally, we want to expose the network to the entire sequence and let it learn the inter-dependencies, rather than us define those dependencies explicitly in the framing of the problem.</p>
<p>We can do this in Keras by making the LSTM layers stateful and manually resetting the state of the network at the end of the epoch, which is also the end of the training sequence.</p>
<p>This is truly how the LSTM networks are intended to be used. We find that by allowing the network itself to learn the dependencies between the characters, that we need a smaller network (half the number of units) and fewer training epochs (almost half).</p>
<p>We first need to define our LSTM layer as stateful. In so doing, we must explicitly specify the batch size as a dimension on the input shape. This also means that when we evaluate the network or make predictions, we must also specify and adhere to this same batch size. This is not a problem now as we are using a batch size of 1. This&nbsp;could introduce&nbsp;difficulties when making predictions when the batch size is not one as predictions will need to be made in batch and in sequence.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547904a538011215" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">batch_size = 1
model.add(LSTM(16, batch_input_shape=(batch_size, X.shape[1], X.shape[2]), stateful=True))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547904a538011215-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547904a538011215-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547904a538011215-1"><span class="crayon-v">batch_size</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547904a538011215-2"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">16</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">stateful</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>An important difference in training the stateful LSTM is that we train it manually one epoch at a time and reset the state after each epoch. We can do this in a for loop. Again, we do not shuffle the input, preserving the sequence in which the input training data was created.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547904d186937919" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">for i in range(300):
	model.fit(X, y, epochs=1, batch_size=batch_size, verbose=2, shuffle=False)
	model.reset_states()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547904d186937919-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547904d186937919-2">2</div><div class="crayon-num" data-line="crayon-58fd89547904d186937919-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547904d186937919-1"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">300</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547904d186937919-2"><span class="crayon-h">	</span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">shuffle</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547904d186937919-3"><span class="crayon-h">	</span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p>As mentioned, we specify the batch size when evaluating the performance of the network on the entire training dataset.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547904e192760745" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># summarize performance of the model
scores = model.evaluate(X, y, batch_size=batch_size, verbose=0)
model.reset_states()
print("Model Accuracy: %.2f%%" % (scores[1]*100))</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547904e192760745-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547904e192760745-2">2</div><div class="crayon-num" data-line="crayon-58fd89547904e192760745-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547904e192760745-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547904e192760745-1"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547904e192760745-2"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547904e192760745-3"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547904e192760745-4"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>Finally, we can demonstrate that the network has indeed learned the entire alphabet. We can seed it with the first letter “A”, request a prediction, feed the prediction back in as an input, and repeat the process all the way to “Z”.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479050327765490" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># demonstrate some model predictions
seed = [char_to_int[alphabet[0]]]
for i in range(0, len(alphabet)-1):
	x = numpy.reshape(seed, (1, len(seed), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	print int_to_char[seed[0]], "-&gt;", int_to_char[index]
	seed = [index]
model.reset_states()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479050327765490-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479050327765490-2">2</div><div class="crayon-num" data-line="crayon-58fd895479050327765490-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479050327765490-4">4</div><div class="crayon-num" data-line="crayon-58fd895479050327765490-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479050327765490-6">6</div><div class="crayon-num" data-line="crayon-58fd895479050327765490-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479050327765490-8">8</div><div class="crayon-num" data-line="crayon-58fd895479050327765490-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479050327765490-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479050327765490-1"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479050327765490-2"><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479050327765490-3"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479050327765490-4"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479050327765490-5"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479050327765490-6"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479050327765490-7"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479050327765490-8"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">seed</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479050327765490-9"><span class="crayon-h">	</span><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479050327765490-10"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p>We can also see if the network can make predictions starting from an arbitrary letter.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479053827851636" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># demonstrate a random starting point
letter = "K"
seed = [char_to_int[letter]]
print "New start: ", letter
for i in range(0, 5):
	x = numpy.reshape(seed, (1, len(seed), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	print int_to_char[seed[0]], "-&gt;", int_to_char[index]
	seed = [index]
model.reset_states()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479053827851636-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479053827851636-2">2</div><div class="crayon-num" data-line="crayon-58fd895479053827851636-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479053827851636-4">4</div><div class="crayon-num" data-line="crayon-58fd895479053827851636-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479053827851636-6">6</div><div class="crayon-num" data-line="crayon-58fd895479053827851636-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479053827851636-8">8</div><div class="crayon-num" data-line="crayon-58fd895479053827851636-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479053827851636-10">10</div><div class="crayon-num" data-line="crayon-58fd895479053827851636-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479053827851636-12">12</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479053827851636-1"><span class="crayon-p"># demonstrate a random starting point</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479053827851636-2"><span class="crayon-v">letter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"K"</span></div><div class="crayon-line" id="crayon-58fd895479053827851636-3"><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">letter</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479053827851636-4"><span class="crayon-i">print</span><span class="crayon-h"> </span><span class="crayon-s">"New start: "</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">letter</span></div><div class="crayon-line" id="crayon-58fd895479053827851636-5"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479053827851636-6"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479053827851636-7"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479053827851636-8"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479053827851636-9"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479053827851636-10"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">seed</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479053827851636-11"><span class="crayon-h">	</span><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479053827851636-12"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>The entire code listing is provided below for completeness.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479055015891321" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># Stateful LSTM to learn one-char to one-char mapping
import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils
# fix random seed for reproducibility
numpy.random.seed(7)
# define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))
# prepare the dataset of input to output pairs encoded as integers
seq_length = 1
dataX = []
dataY = []
for i in range(0, len(alphabet) - seq_length, 1):
	seq_in = alphabet[i:i + seq_length]
	seq_out = alphabet[i + seq_length]
	dataX.append([char_to_int[char] for char in seq_in])
	dataY.append(char_to_int[seq_out])
	print seq_in, '-&gt;', seq_out
# reshape X to be [samples, time steps, features]
X = numpy.reshape(dataX, (len(dataX), seq_length, 1))
# normalize
X = X / float(len(alphabet))
# one hot encode the output variable
y = np_utils.to_categorical(dataY)
# create and fit the model
batch_size = 1
model = Sequential()
model.add(LSTM(16, batch_input_shape=(batch_size, X.shape[1], X.shape[2]), stateful=True))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
for i in range(300):
	model.fit(X, y, epochs=1, batch_size=batch_size, verbose=2, shuffle=False)
	model.reset_states()
# summarize performance of the model
scores = model.evaluate(X, y, batch_size=batch_size, verbose=0)
model.reset_states()
print("Model Accuracy: %.2f%%" % (scores[1]*100))
# demonstrate some model predictions
seed = [char_to_int[alphabet[0]]]
for i in range(0, len(alphabet)-1):
	x = numpy.reshape(seed, (1, len(seed), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	print int_to_char[seed[0]], "-&gt;", int_to_char[index]
	seed = [index]
model.reset_states()
# demonstrate a random starting point
letter = "K"
seed = [char_to_int[letter]]
print "New start: ", letter
for i in range(0, 5):
	x = numpy.reshape(seed, (1, len(seed), 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	print int_to_char[seed[0]], "-&gt;", int_to_char[index]
	seed = [index]
model.reset_states()</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479055015891321-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-2">2</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-4">4</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-6">6</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-8">8</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-10">10</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-12">12</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-14">14</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-16">16</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-18">18</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-20">20</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-22">22</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-24">24</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-26">26</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-28">28</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-30">30</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-32">32</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-34">34</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-36">36</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-38">38</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-40">40</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-42">42</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-44">44</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-46">46</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-48">48</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-50">50</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-52">52</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-54">54</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-56">56</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-58">58</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-60">60</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-61">61</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-62">62</div><div class="crayon-num" data-line="crayon-58fd895479055015891321-63">63</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479055015891321-64">64</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479055015891321-1"><span class="crayon-p"># Stateful LSTM to learn one-char to one-char mapping</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-2"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-6"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-v">np_utils</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-7"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-8"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-9"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-10"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-11"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-12"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-13"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-14"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-15"><span class="crayon-v">seq_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-16"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-17"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-18"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-19"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">:</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-20"><span class="crayon-h">	</span><span class="crayon-v">seq_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-21"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">seq_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-22"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">seq_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-23"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_out</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-24"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-25"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">seq_length</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-26"><span class="crayon-p"># normalize</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-27"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-28"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-29"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-30"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-31"><span class="crayon-v">batch_size</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-32"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-33"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">16</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">stateful</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-34"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-35"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-36"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">300</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-37"><span class="crayon-h">	</span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">shuffle</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-38"><span class="crayon-h">	</span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-39"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-40"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-41"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-42"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-43"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-44"><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-45"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-46"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-47"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-48"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-49"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-50"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">seed</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-51"><span class="crayon-h">	</span><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-52"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-53"><span class="crayon-p"># demonstrate a random starting point</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-54"><span class="crayon-v">letter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"K"</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-55"><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">letter</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-56"><span class="crayon-i">print</span><span class="crayon-h"> </span><span class="crayon-s">"New start: "</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">letter</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-57"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-58"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">seed</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-59"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-60"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-61"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-62"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">seed</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479055015891321-63"><span class="crayon-h">	</span><span class="crayon-v">seed</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479055015891321-64"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">reset_states</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0044 seconds] -->
<p>Running the example provides the following output.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479058110300336" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">Model Accuracy: 100.00%
A -&gt; B
B -&gt; C
C -&gt; D
D -&gt; E
E -&gt; F
F -&gt; G
G -&gt; H
H -&gt; I
I -&gt; J
J -&gt; K
K -&gt; L
L -&gt; M
M -&gt; N
N -&gt; O
O -&gt; P
P -&gt; Q
Q -&gt; R
R -&gt; S
S -&gt; T
T -&gt; U
U -&gt; V
V -&gt; W
W -&gt; X
X -&gt; Y
Y -&gt; Z
New start:  K
K -&gt; B
B -&gt; C
C -&gt; D
D -&gt; E
E -&gt; F</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479058110300336-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-2">2</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-4">4</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-6">6</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-8">8</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-10">10</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-12">12</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-14">14</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-16">16</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-18">18</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-20">20</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-22">22</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-24">24</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-26">26</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-28">28</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-30">30</div><div class="crayon-num" data-line="crayon-58fd895479058110300336-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479058110300336-32">32</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479058110300336-1">Model Accuracy: 100.00%</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-2">A -&gt; B</div><div class="crayon-line" id="crayon-58fd895479058110300336-3">B -&gt; C</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-4">C -&gt; D</div><div class="crayon-line" id="crayon-58fd895479058110300336-5">D -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-6">E -&gt; F</div><div class="crayon-line" id="crayon-58fd895479058110300336-7">F -&gt; G</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-8">G -&gt; H</div><div class="crayon-line" id="crayon-58fd895479058110300336-9">H -&gt; I</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-10">I -&gt; J</div><div class="crayon-line" id="crayon-58fd895479058110300336-11">J -&gt; K</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-12">K -&gt; L</div><div class="crayon-line" id="crayon-58fd895479058110300336-13">L -&gt; M</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-14">M -&gt; N</div><div class="crayon-line" id="crayon-58fd895479058110300336-15">N -&gt; O</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-16">O -&gt; P</div><div class="crayon-line" id="crayon-58fd895479058110300336-17">P -&gt; Q</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-18">Q -&gt; R</div><div class="crayon-line" id="crayon-58fd895479058110300336-19">R -&gt; S</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-20">S -&gt; T</div><div class="crayon-line" id="crayon-58fd895479058110300336-21">T -&gt; U</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-22">U -&gt; V</div><div class="crayon-line" id="crayon-58fd895479058110300336-23">V -&gt; W</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-24">W -&gt; X</div><div class="crayon-line" id="crayon-58fd895479058110300336-25">X -&gt; Y</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-26">Y -&gt; Z</div><div class="crayon-line" id="crayon-58fd895479058110300336-27">New start:&nbsp;&nbsp;K</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-28">K -&gt; B</div><div class="crayon-line" id="crayon-58fd895479058110300336-29">B -&gt; C</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-30">C -&gt; D</div><div class="crayon-line" id="crayon-58fd895479058110300336-31">D -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479058110300336-32">E -&gt; F</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>We can see that the network has memorized the entire alphabet perfectly. It used the context of the samples themselves and learned whatever dependency it needed to predict the next character in the sequence.</p>
<p>We can also see that if we seed the network with the first letter, that it can correctly rattle off the rest of the alphabet.</p>
<p>We can also see that it has only learned the full alphabet sequence and that from a cold start. When&nbsp;asked to predict the next letter from “K” that it predicts “B” and falls back into regurgitating the entire alphabet.</p>
<p>To truly predict “K” the state of the network would need to be warmed up iteratively fed the letters from “A” to “J”. This tells us that we could achieve the same effect with a “stateless” LSTM by preparing training data like:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547905b384767610" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">---a -&gt; b
--ab -&gt; c
-abc -&gt; d
abcd -&gt; e</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547905b384767610-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905b384767610-2">2</div><div class="crayon-num" data-line="crayon-58fd89547905b384767610-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905b384767610-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547905b384767610-1"><span class="crayon-o">--</span><span class="crayon-o">-</span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-v">b</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905b384767610-2"><span class="crayon-o">--</span><span class="crayon-v">ab</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-v">c</span></div><div class="crayon-line" id="crayon-58fd89547905b384767610-3"><span class="crayon-o">-</span><span class="crayon-v">abc</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-i">d</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905b384767610-4"><span class="crayon-v">abcd</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-v">e</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p><span style="line-height: 1.5;">Where the input sequence is fixed at 25 (a-to-y to predict z) and patterns are prefixed with zero-padding.</span></p>
<p>Finally, this raises the question of training an LSTM network using variable length input sequences to predict the next character.</p>
<h2>LSTM with Variable-Length Input to One-Char Output</h2>
<p>In the previous section, we discovered that the Keras “stateful” LSTM was really only a shortcut to replaying the first n-sequences, but didn’t really help us learn a generic model of the alphabet.</p>
<p>In this section we explore a variation of the “stateless” LSTM that learns random subsequences of the alphabet and an effort to build a model that can be given arbitrary letters or subsequences of letters and predict the next letter in the alphabet.</p>
<p>Firstly, we are changing the framing of the problem. To simplify we will define a maximum input sequence length and set it to a small value like 5 to speed up training. This defines the maximum length of subsequences of the alphabet will be drawn for training. In extensions, this could just as set to the full alphabet (26) or longer if we allow looping back to the start of the sequence.</p>
<p>We also need to define the number of random sequences to create, in this case 1000. This too could be more or less. I expect less patterns are actually required.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd89547905d220876018" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># prepare the dataset of input to output pairs encoded as integers
num_inputs = 1000
max_len = 5
dataX = []
dataY = []
for i in range(num_inputs):
	start = numpy.random.randint(len(alphabet)-2)
	end = numpy.random.randint(start, min(start+max_len,len(alphabet)-1))
	sequence_in = alphabet[start:end+1]
	sequence_out = alphabet[end + 1]
	dataX.append([char_to_int[char] for char in sequence_in])
	dataY.append(char_to_int[sequence_out])
	print sequence_in, '-&gt;', sequence_out</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd89547905d220876018-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905d220876018-2">2</div><div class="crayon-num" data-line="crayon-58fd89547905d220876018-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905d220876018-4">4</div><div class="crayon-num" data-line="crayon-58fd89547905d220876018-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905d220876018-6">6</div><div class="crayon-num" data-line="crayon-58fd89547905d220876018-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905d220876018-8">8</div><div class="crayon-num" data-line="crayon-58fd89547905d220876018-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905d220876018-10">10</div><div class="crayon-num" data-line="crayon-58fd89547905d220876018-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd89547905d220876018-12">12</div><div class="crayon-num" data-line="crayon-58fd89547905d220876018-13">13</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd89547905d220876018-1"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905d220876018-2"><span class="crayon-v">num_inputs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1000</span></div><div class="crayon-line" id="crayon-58fd89547905d220876018-3"><span class="crayon-v">max_len</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905d220876018-4"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547905d220876018-5"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905d220876018-6"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">num_inputs</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd89547905d220876018-7"><span class="crayon-h">	</span><span class="crayon-v">start</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905d220876018-8"><span class="crayon-h">	</span><span class="crayon-st">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-v">start</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">min</span><span class="crayon-sy">(</span><span class="crayon-v">start</span><span class="crayon-o">+</span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547905d220876018-9"><span class="crayon-h">	</span><span class="crayon-v">sequence_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">start</span><span class="crayon-o">:</span><span class="crayon-st">end</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905d220876018-10"><span class="crayon-h">	</span><span class="crayon-v">sequence_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-st">end</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd89547905d220876018-11"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sequence_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd89547905d220876018-12"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">sequence_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd89547905d220876018-13"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">sequence_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">sequence_out</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p>Running this code in the broader context will create input patterns that look like the following:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479060859060391" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">PQRST -&gt; U
W -&gt; X
O -&gt; P
OPQ -&gt; R
IJKLM -&gt; N
QRSTU -&gt; V
ABCD -&gt; E
X -&gt; Y
GHIJ -&gt; K</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479060859060391-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479060859060391-2">2</div><div class="crayon-num" data-line="crayon-58fd895479060859060391-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479060859060391-4">4</div><div class="crayon-num" data-line="crayon-58fd895479060859060391-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479060859060391-6">6</div><div class="crayon-num" data-line="crayon-58fd895479060859060391-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479060859060391-8">8</div><div class="crayon-num" data-line="crayon-58fd895479060859060391-9">9</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479060859060391-1">PQRST -&gt; U</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479060859060391-2">W -&gt; X</div><div class="crayon-line" id="crayon-58fd895479060859060391-3">O -&gt; P</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479060859060391-4">OPQ -&gt; R</div><div class="crayon-line" id="crayon-58fd895479060859060391-5">IJKLM -&gt; N</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479060859060391-6">QRSTU -&gt; V</div><div class="crayon-line" id="crayon-58fd895479060859060391-7">ABCD -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479060859060391-8">X -&gt; Y</div><div class="crayon-line" id="crayon-58fd895479060859060391-9">GHIJ -&gt; K</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0000 seconds] -->
<p>The input sequences vary in length between 1 and <strong>max_len</strong> and therefore require zero padding. Here, we use left-hand-side (prefix) padding with the Keras built in <strong>pad_sequences()</strong> function.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479061084848319" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; z-index: 4;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">X = pad_sequences(dataX, maxlen=max_len, dtype='float32')</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479061084848319-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479061084848319-1"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">pad_sequences</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">maxlen</span><span class="crayon-o">=</span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-s">'float32'</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>The trained model is evaluated on randomly selected input patterns. This could just as easily be new randomly generated sequences of characters. I also believe this could also be a linear sequence seeded with “A” with outputs fes back&nbsp;in as single character inputs.</p>
<p>The full code listing is provided below for completeness.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479063729680612" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;"># LSTM with Variable Length Input Sequences to One Character Output
import numpy
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
from keras.utils import np_utils
from keras.preprocessing.sequence import pad_sequences
from theano.tensor.shared_randomstreams import RandomStreams
# fix random seed for reproducibility
numpy.random.seed(7)
# define the raw dataset
alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# create mapping of characters to integers (0-25) and the reverse
char_to_int = dict((c, i) for i, c in enumerate(alphabet))
int_to_char = dict((i, c) for i, c in enumerate(alphabet))
# prepare the dataset of input to output pairs encoded as integers
num_inputs = 1000
max_len = 5
dataX = []
dataY = []
for i in range(num_inputs):
	start = numpy.random.randint(len(alphabet)-2)
	end = numpy.random.randint(start, min(start+max_len,len(alphabet)-1))
	sequence_in = alphabet[start:end+1]
	sequence_out = alphabet[end + 1]
	dataX.append([char_to_int[char] for char in sequence_in])
	dataY.append(char_to_int[sequence_out])
	print sequence_in, '-&gt;', sequence_out
# convert list of lists to array and pad sequences if needed
X = pad_sequences(dataX, maxlen=max_len, dtype='float32')
# reshape X to be [samples, time steps, features]
X = numpy.reshape(X, (X.shape[0], max_len, 1))
# normalize
X = X / float(len(alphabet))
# one hot encode the output variable
y = np_utils.to_categorical(dataY)
# create and fit the model
batch_size = 1
model = Sequential()
model.add(LSTM(32, input_shape=(X.shape[1], 1)))
model.add(Dense(y.shape[1], activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, y, epochs=500, batch_size=batch_size, verbose=2)
# summarize performance of the model
scores = model.evaluate(X, y, verbose=0)
print("Model Accuracy: %.2f%%" % (scores[1]*100))
# demonstrate some model predictions
for i in range(20):
	pattern_index = numpy.random.randint(len(dataX))
	pattern = dataX[pattern_index]
	x = pad_sequences([pattern], maxlen=max_len, dtype='float32')
	x = numpy.reshape(x, (1, max_len, 1))
	x = x / float(len(alphabet))
	prediction = model.predict(x, verbose=0)
	index = numpy.argmax(prediction)
	result = int_to_char[index]
	seq_in = [int_to_char[value] for value in pattern]
	print seq_in, "-&gt;", result</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479063729680612-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-2">2</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-4">4</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-6">6</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-8">8</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-10">10</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-12">12</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-14">14</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-16">16</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-18">18</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-20">20</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-22">22</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-24">24</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-26">26</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-28">28</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-30">30</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-32">32</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-34">34</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-36">36</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-38">38</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-40">40</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-42">42</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-44">44</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-46">46</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-48">48</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-50">50</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-52">52</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-54">54</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-56">56</div><div class="crayon-num" data-line="crayon-58fd895479063729680612-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479063729680612-58">58</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479063729680612-1"><span class="crayon-p"># LSTM with Variable Length Input Sequences to One Character Output</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-2"><span class="crayon-e">import </span><span class="crayon-e">numpy</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-3"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">models </span><span class="crayon-e">import </span><span class="crayon-e">Sequential</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-4"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">Dense</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-5"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">layers </span><span class="crayon-e">import </span><span class="crayon-e">LSTM</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-6"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-e">utils </span><span class="crayon-e">import </span><span class="crayon-e">np_utils</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-7"><span class="crayon-e">from </span><span class="crayon-v">keras</span><span class="crayon-sy">.</span><span class="crayon-v">preprocessing</span><span class="crayon-sy">.</span><span class="crayon-e">sequence </span><span class="crayon-e">import </span><span class="crayon-e">pad_sequences</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-8"><span class="crayon-e">from </span><span class="crayon-v">theano</span><span class="crayon-sy">.</span><span class="crayon-v">tensor</span><span class="crayon-sy">.</span><span class="crayon-e">shared_randomstreams </span><span class="crayon-e">import </span><span class="crayon-v">RandomStreams</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-9"><span class="crayon-p"># fix random seed for reproducibility</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-10"><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">7</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-11"><span class="crayon-p"># define the raw dataset</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-12"><span class="crayon-v">alphabet</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-13"><span class="crayon-p"># create mapping of characters to integers (0-25) and the reverse</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-14"><span class="crayon-v">char_to_int</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-15"><span class="crayon-v">int_to_char</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-16"><span class="crayon-p"># prepare the dataset of input to output pairs encoded as integers</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-17"><span class="crayon-v">num_inputs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1000</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-18"><span class="crayon-v">max_len</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-19"><span class="crayon-v">dataX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-20"><span class="crayon-v">dataY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-21"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">num_inputs</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-22"><span class="crayon-h">	</span><span class="crayon-v">start</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-23"><span class="crayon-h">	</span><span class="crayon-st">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-v">start</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">min</span><span class="crayon-sy">(</span><span class="crayon-v">start</span><span class="crayon-o">+</span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-24"><span class="crayon-h">	</span><span class="crayon-v">sequence_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-v">start</span><span class="crayon-o">:</span><span class="crayon-st">end</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-25"><span class="crayon-h">	</span><span class="crayon-v">sequence_out</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">alphabet</span><span class="crayon-sy">[</span><span class="crayon-st">end</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-26"><span class="crayon-h">	</span><span class="crayon-v">dataX</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-t">char</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sequence_in</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-27"><span class="crayon-h">	</span><span class="crayon-v">dataY</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">char_to_int</span><span class="crayon-sy">[</span><span class="crayon-v">sequence_out</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-28"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">sequence_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'-&gt;'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">sequence_out</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-29"><span class="crayon-p"># convert list of lists to array and pad sequences if needed</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-30"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">pad_sequences</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">maxlen</span><span class="crayon-o">=</span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-s">'float32'</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-31"><span class="crayon-p"># reshape X to be [samples, time steps, features]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-32"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-33"><span class="crayon-p"># normalize</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-34"><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-35"><span class="crayon-p"># one hot encode the output variable</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-36"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np_utils</span><span class="crayon-sy">.</span><span class="crayon-e">to_categorical</span><span class="crayon-sy">(</span><span class="crayon-v">dataY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-37"><span class="crayon-p"># create and fit the model</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-38"><span class="crayon-v">batch_size</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-39"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Sequential</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-40"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">LSTM</span><span class="crayon-sy">(</span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_shape</span><span class="crayon-o">=</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-41"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-e">Dense</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">activation</span><span class="crayon-o">=</span><span class="crayon-s">'softmax'</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-42"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">compile</span><span class="crayon-sy">(</span><span class="crayon-v">loss</span><span class="crayon-o">=</span><span class="crayon-s">'categorical_crossentropy'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">optimizer</span><span class="crayon-o">=</span><span class="crayon-s">'adam'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'accuracy'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-43"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epochs</span><span class="crayon-o">=</span><span class="crayon-cn">500</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-44"><span class="crayon-p"># summarize performance of the model</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-45"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span><span class="crayon-v">X</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-46"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"Model Accuracy: %.2f%%"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-cn">100</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-47"><span class="crayon-p"># demonstrate some model predictions</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-48"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">20</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-49"><span class="crayon-h">	</span><span class="crayon-v">pattern_index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-v">random</span><span class="crayon-sy">.</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">dataX</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-50"><span class="crayon-h">	</span><span class="crayon-v">pattern</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">dataX</span><span class="crayon-sy">[</span><span class="crayon-v">pattern_index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-51"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">pad_sequences</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">maxlen</span><span class="crayon-o">=</span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-s">'float32'</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-52"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">reshape</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">max_len</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-53"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">alphabet</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-54"><span class="crayon-h">	</span><span class="crayon-v">prediction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">verbose</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-55"><span class="crayon-h">	</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">prediction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-56"><span class="crayon-h">	</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">index</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-58fd895479063729680612-57"><span class="crayon-h">	</span><span class="crayon-v">seq_in</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">int_to_char</span><span class="crayon-sy">[</span><span class="crayon-v">value</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">value </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pattern</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479063729680612-58"><span class="crayon-h">	</span><span class="crayon-e">print </span><span class="crayon-v">seq_in</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"-&gt;"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0038 seconds] -->
<p>Running this code produces the following output:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-58fd895479067827359305" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style="margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important; height: 18px !important; line-height: 18px !important; margin-top: -19px; display: none; position: absolute; z-index: 2;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button crayon-pressed" title="Toggle Line Numbers"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code" style="display: none;"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon" style="background-size: 48px 128px; background-image: url(&quot;http://3qeqpr26caki16dnhd19sv6by6v.wpengine.netdna-cdn.com/wp-content/plugins/crayon-syntax-highlighter/css/images/toolbar/buttons@2x.png&quot;);"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly="" style="tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;">Model Accuracy: 98.90%
['Q', 'R'] -&gt; S
['W', 'X'] -&gt; Y
['W', 'X'] -&gt; Y
['C', 'D'] -&gt; E
['E'] -&gt; F
['S', 'T', 'U'] -&gt; V
['G', 'H', 'I', 'J', 'K'] -&gt; L
['O', 'P', 'Q', 'R', 'S'] -&gt; T
['C', 'D'] -&gt; E
['O'] -&gt; P
['N', 'O', 'P'] -&gt; Q
['D', 'E', 'F', 'G', 'H'] -&gt; I
['X'] -&gt; Y
['K'] -&gt; L
['M'] -&gt; N
['R'] -&gt; T
['K'] -&gt; L
['E', 'F', 'G'] -&gt; H
['Q'] -&gt; R
['Q', 'R', 'S'] -&gt; T</textarea></div>
			<div class="crayon-main" style="position: relative; z-index: 1; overflow: hidden;">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-58fd895479067827359305-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-2">2</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-4">4</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-6">6</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-8">8</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-10">10</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-12">12</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-14">14</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-16">16</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-18">18</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-58fd895479067827359305-20">20</div><div class="crayon-num" data-line="crayon-58fd895479067827359305-21">21</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-58fd895479067827359305-1">Model Accuracy: 98.90%</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-2">['Q', 'R'] -&gt; S</div><div class="crayon-line" id="crayon-58fd895479067827359305-3">['W', 'X'] -&gt; Y</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-4">['W', 'X'] -&gt; Y</div><div class="crayon-line" id="crayon-58fd895479067827359305-5">['C', 'D'] -&gt; E</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-6">['E'] -&gt; F</div><div class="crayon-line" id="crayon-58fd895479067827359305-7">['S', 'T', 'U'] -&gt; V</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-8">['G', 'H', 'I', 'J', 'K'] -&gt; L</div><div class="crayon-line" id="crayon-58fd895479067827359305-9">['O', 'P', 'Q', 'R', 'S'] -&gt; T</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-10">['C', 'D'] -&gt; E</div><div class="crayon-line" id="crayon-58fd895479067827359305-11">['O'] -&gt; P</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-12">['N', 'O', 'P'] -&gt; Q</div><div class="crayon-line" id="crayon-58fd895479067827359305-13">['D', 'E', 'F', 'G', 'H'] -&gt; I</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-14">['X'] -&gt; Y</div><div class="crayon-line" id="crayon-58fd895479067827359305-15">['K'] -&gt; L</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-16">['M'] -&gt; N</div><div class="crayon-line" id="crayon-58fd895479067827359305-17">['R'] -&gt; T</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-18">['K'] -&gt; L</div><div class="crayon-line" id="crayon-58fd895479067827359305-19">['E', 'F', 'G'] -&gt; H</div><div class="crayon-line crayon-striped-line" id="crayon-58fd895479067827359305-20">['Q'] -&gt; R</div><div class="crayon-line" id="crayon-58fd895479067827359305-21">['Q', 'R', 'S'] -&gt; T</div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>We can see that although the model did not learn the alphabet perfectly from the randomly generated subsequences, it did very well. The model was not tuned and may require more training or a larger network, or both (an exercise for the reader).</p>
<p>This is a good natural extension to the “<em>all sequential input examples in each batch</em>” alphabet model learned above in that it can handle ad hoc queries, but this time of arbitrary sequence length (up to the max length).</p>
<h2>Summary</h2>
<p>In this post you discovered LSTM recurrent neural networks in Keras and how they manage state.</p>
<p>Specifically, you learned:</p>
<ul>
<li>How to develop a naive LSTM network for one-character to one-character prediction.</li>
<li>How to configure a naive LSTM to learn a sequence across time steps within a sample.</li>
<li>How to configure an LSTM to learn a sequence across samples by manually managing state.</li>
</ul>
<p>Do you have any questions about managing LSTM state or about this post?<br>
Ask your questions in the comment and I will do my best to answer.</p>
<!-- Start Shortcoder content --><p style="text-align: left;"></p><div class="woo-sc-hr"></div><p></p>
<h2 style="text-align: center;">Frustrated With Your Progress In Deep Learning?</h2>
<h4 style="text-align: center;">&nbsp;What If You Could Develop Your Own Deep Nets in Minutes</h4>
<p style="text-align: center;">...with just a few lines of Python</p>
<p style="text-align: center;">Discover how in my new Ebook: <a href="http://machinelearningmastery.com/deep-learning-with-python/">Deep Learning With Python</a></p>
<p style="text-align: center;">It covers <strong>self-study tutorials</strong> and <strong>end-to-end projects</strong> on topics like:<br><em>Multilayer Perceptrons</em>,&nbsp;<em>Convolutional Nets</em> and&nbsp;<em>Recurrent Neural Nets</em>, and more...</p>
<h4 style="text-align: center;">Finally Bring Deep Learning To <br>Your Own Projects</h4>
<p style="text-align: center;">Skip the Academics. Just&nbsp;Results.</p>
<p style="text-align: center;"><a href="http://machinelearningmastery.com/deep-learning-with-python/">Click to&nbsp;learn more</a>.</p>
<p></p><div class="woo-sc-hr"></div><p></p><!-- End Shortcoder content -->
	</section><!-- /.entry -->
	<div class="fix"></div>
<aside id="post-author">
	<div class="profile-image"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80"></div>
	<div class="profile-content">
		<h4>About Jason Brownlee</h4>
		Dr. Jason Brownlee is a husband, proud father, academic researcher, author, professional developer and a machine learning practitioner. He is dedicated to helping developers get started and get good at applied machine learning.
<a href="http://machinelearningmastery.com/about">Learn more</a>.				<div class="profile-link">
			<a href="http://machinelearningmastery.com/author/jasonb/">
				View all posts by Jason Brownlee <span class="meta-nav">→</span>			</a>
		</div><!--#profile-link-->
			</div>
	<div class="fix"></div>
</aside>
<div class="post-utility"></div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="http://machinelearningmastery.com/use-ensemble-machine-learning-algorithms-weka/" rel="prev"><i class="fa fa-angle-left"></i> How to Use Ensemble Machine Learning Algorithms in Weka</a></div>
	            <div class="nav-next fr"><a href="http://machinelearningmastery.com/compare-performance-machine-learning-algorithms-weka/" rel="next">How To Compare the Performance of Machine Learning Algorithms in Weka <i class="fa fa-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		<div id="comments">		 	<h3 id="comments-title">46 Responses to <em>Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras</em></h3>
		 	<ol class="commentlist">
				
		<li id="comment-358237" class="comment even thread-even depth-1 parent">

	      	<div id="li-comment-358237" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/dc4a938ef4794e3fa1d596e75547a784" srcset="http://1.gravatar.com/avatar/dc4a938ef4794e3fa1d596e75547a784?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Mark</span>
	                <span class="date">July 28, 2016 at 6:02 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-358237" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Great series of posts on LSTM networks recently. Keep up the good work</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=358237#respond" onclick="return addComment.moveForm( &quot;comment-358237&quot;, &quot;358237&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Mark">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-358269" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-358269" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">July 29, 2016 at 6:28 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-358269" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks Mark.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=358269#respond" onclick="return addComment.moveForm( &quot;comment-358269&quot;, &quot;358269&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-358292" class="comment even thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-358292" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/c451248e578fd6a3ffffed35589cd285" srcset="http://0.gravatar.com/avatar/c451248e578fd6a3ffffed35589cd285?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Atlant</span>
	                <span class="date">July 29, 2016 at 4:37 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-358292" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I like this post, it gave me many enlightenment.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=358292#respond" onclick="return addComment.moveForm( &quot;comment-358292&quot;, &quot;358292&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Atlant">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-358294" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-358294" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">July 29, 2016 at 4:53 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-358294" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks Atlant.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=358294#respond" onclick="return addComment.moveForm( &quot;comment-358294&quot;, &quot;358294&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-360309" class="comment even thread-even depth-1 parent">

	      	<div id="li-comment-360309" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/191cca8423652ed590483bd483f08787" srcset="http://1.gravatar.com/avatar/191cca8423652ed590483bd483f08787?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">shanbe</span>
	                <span class="date">August 17, 2016 at 9:47 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-360309" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I’m probably missing something here but could you please explain why LSTM units are needed in the alphabet example where any output depends directly on the input letter and there is no confusion between different input -&gt; output pairs at all?</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=360309#respond" onclick="return addComment.moveForm( &quot;comment-360309&quot;, &quot;360309&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to shanbe">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-360356" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2 parent">

	      	<div id="li-comment-360356" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">August 18, 2016 at 7:25 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-360356" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>It is a demonstration of the algorithms ability to learn a sequence. Not just input-output pairs, but input-output pairs over time.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=360356#respond" onclick="return addComment.moveForm( &quot;comment-360356&quot;, &quot;360356&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-366095" class="comment even depth-3 parent">

	      	<div id="li-comment-366095" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/89d977d2ee8042b34489af9513ce9296" srcset="http://2.gravatar.com/avatar/89d977d2ee8042b34489af9513ce9296?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Randy</span>
	                <span class="date">October 2, 2016 at 8:19 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-366095" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>hi, I got a little confused there. What does the LSTM units mean?<br>
Thanks</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=366095#respond" onclick="return addComment.moveForm( &quot;comment-366095&quot;, &quot;366095&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Randy">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-366116" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-4">

	      	<div id="li-comment-366116" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">October 3, 2016 at 5:19 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-366116" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Randy, the LSTM units are the “memory units” or you can just call them the neurons.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=366116#respond" onclick="return addComment.moveForm( &quot;comment-366116&quot;, &quot;366116&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-361463" class="comment even thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-361463" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/c4a1008b4a6cd11dcf829c752b764070" srcset="http://0.gravatar.com/avatar/c4a1008b4a6cd11dcf829c752b764070?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">dolaameng</span>
	                <span class="date">August 24, 2016 at 10:28 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-361463" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you for sharing these educational examples! Appreciate it if you can elaborate on the “LSTM State Within A Batch” example. The confusing part is on the explanation “that the LSTM could use the context of the sequence within the batch to better learn the sequence.”, which may imply that the states of LSTM are reused within the training of a batch, and this motivated the setting of parameter shuffle as False. </p>
<p>But my understanding of Keras’s implementation is that the LSTM won’t reuse the states within a batch. In fact, the sequences in a batch is kinda like triggering the LSTM “in parallel” – in fact the states of LSM should be of shape (nsamples, nout) for both gates – separate states for each sequence – this is what id described [Keras document](<a href="https://keras.io/getting-started/faq/#how-can-i-use-stateful-rnns" rel="nofollow">https://keras.io/getting-started/faq/#how-can-i-use-stateful-rnns</a>): states are reused by the ith instance for successive batchs. </p>
<p>This means that even parameter shuffle is set as True, it will still give you the observed performance. This also explains why the predictions on random patterns were also good, which was opposite to the observations in the next example “Stateful LSTM for a One-Char to One-Char Mapping”. The reason why setting a bigger batch size resulted in better performance than the first example, could be the bigger nb_epoch used. </p>
<p>Appreciate your opinions on this! It’s a great article anyway!</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=361463#respond" onclick="return addComment.moveForm( &quot;comment-361463&quot;, &quot;361463&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to dolaameng">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-368532" class="comment odd alt depth-2">

	      	<div id="li-comment-368532" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/36e27beda271db3f176435ebacb4ea29" srcset="http://0.gravatar.com/avatar/36e27beda271db3f176435ebacb4ea29?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Rodrigo Pinto</span>
	                <span class="date">October 29, 2016 at 4:35 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-368532" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You are right, that state from sequence to sequence inside one batch.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=368532#respond" onclick="return addComment.moveForm( &quot;comment-368532&quot;, &quot;368532&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Rodrigo Pinto">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-363580" class="comment even thread-even depth-1 parent">

	      	<div id="li-comment-363580" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/3d7481313fbaecce9fac553caabeb9d2" srcset="http://0.gravatar.com/avatar/3d7481313fbaecce9fac553caabeb9d2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Hadi</span>
	                <span class="date">September 5, 2016 at 2:52 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-363580" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you for your amazing tutorial.<br>
However, what if I want to predict a sequence of outputs? If I add a dimension to the output it is gonna be like a features window and the model will not consider the outputs as  a sequence of outputs. It is like outputs are independent. How can I fix that issue and have a model which for example generates “FGH” when I give it “BCDE”.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=363580#respond" onclick="return addComment.moveForm( &quot;comment-363580&quot;, &quot;363580&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Hadi">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-392122" class="comment odd alt depth-2">

	      	<div id="li-comment-392122" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/7b945128388c475de2fe5b3bfdf23ffc" srcset="http://1.gravatar.com/avatar/7b945128388c475de2fe5b3bfdf23ffc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Wes</span>
	                <span class="date">March 11, 2017 at 1:10 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-392122" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hadi, I use a “one-hot” encoding for my features. This causes the output to be a probability distribution over the features. You may then use a sampling technique to choose “next” features, similar to the “Unreasonable Effectiveness of RNN” article. This method includes a “temperature” parameter that you can tune to produce outputs with more or less adherence to the LSTM’s predictions.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=392122#respond" onclick="return addComment.moveForm( &quot;comment-392122&quot;, &quot;392122&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Wes">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-392194" class="comment even depth-2">

	      	<div id="li-comment-392194" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/7b945128388c475de2fe5b3bfdf23ffc" srcset="http://1.gravatar.com/avatar/7b945128388c475de2fe5b3bfdf23ffc?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Wes</span>
	                <span class="date">March 11, 2017 at 9:32 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-392194" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>One more follow-up to this problem… you may be interested in a different type of network, such as a Generative Adversarial Network (GAN) <a href="https://github.com/jacobgil/keras-dcgan" rel="nofollow">https://github.com/jacobgil/keras-dcgan</a></p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=392194#respond" onclick="return addComment.moveForm( &quot;comment-392194&quot;, &quot;392194&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Wes">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-364542" class="comment odd alt thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-364542" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/b9f336cf3b115520c53e0c530b3085f0" srcset="http://2.gravatar.com/avatar/b9f336cf3b115520c53e0c530b3085f0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Alex</span>
	                <span class="date">September 15, 2016 at 5:18 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-364542" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Also for my part than you for the tutorial. </p>
<p>However, I have a few related questions (also posted in StackOverflow, <a href="http://stackoverflow.com/questions/39457744/backpropagation-through-time-in-stateful-rnns" rel="nofollow">http://stackoverflow.com/questions/39457744/backpropagation-through-time-in-stateful-rnns</a>): If I have a stateful RNN with just one timestep per batch, how is backpropagation handled? Will it handle only this one timestep or does it accumulate updates for the entire sequence? I fear that it updates only the timesteps per batch and nothing further back. If so, do you think this is a major drawback? Or do you know a way to overcome this?</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=364542#respond" onclick="return addComment.moveForm( &quot;comment-364542&quot;, &quot;364542&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Alex">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-364622" class="comment byuser comment-author-jasonb bypostauthor even depth-2 parent">

	      	<div id="li-comment-364622" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">September 16, 2016 at 9:01 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-364622" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Alex,</p>
<p>I believe updates are performed after each batch. This can be a downside of having a small batch. A batch size of 1 will essentially perform online gradient descent (I would guess). Developers more familiar with Keras internals may be able to give you a more concrete answer.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=364622#respond" onclick="return addComment.moveForm( &quot;comment-364622&quot;, &quot;364622&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-364683" class="comment odd alt depth-3 parent">

	      	<div id="li-comment-364683" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/b9f336cf3b115520c53e0c530b3085f0" srcset="http://2.gravatar.com/avatar/b9f336cf3b115520c53e0c530b3085f0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Alex</span>
	                <span class="date">September 17, 2016 at 3:24 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-364683" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,</p>
<p>thank you very much for your answer. </p>
<p>I posed my question wrongly because I mixed up “batch size” and “time steps”. If I have sequences of shape (nb_samples, n, dims) and I process them one time step after the other with a stateful LSTM (feeding batches of shape (batch_size, 1, dims) to the network), will backpropagation go through the entire sequences as it would if I processed the entire sequence at once?</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=364683#respond" onclick="return addComment.moveForm( &quot;comment-364683&quot;, &quot;364683&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Alex">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-364707" class="comment byuser comment-author-jasonb bypostauthor even depth-4">

	      	<div id="li-comment-364707" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">September 17, 2016 at 9:37 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-364707" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>The answer does not change, updates happen after each batch.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=364707#respond" onclick="return addComment.moveForm( &quot;comment-364707&quot;, &quot;364707&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-365158" class="comment odd alt thread-even depth-1 parent">

	      	<div id="li-comment-365158" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/6e5854357c24b24c01330cd25700f91a" srcset="http://0.gravatar.com/avatar/6e5854357c24b24c01330cd25700f91a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Vishal</span>
	                <span class="date">September 21, 2016 at 11:28 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365158" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>“The Keras implementation of LSTMs resets the state of the network after each batch.”</p>
<p>Could you please explain what you mean by “resets the state”? What happens to the network state after each epoch?</p>
<p>Thanks!</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365158#respond" onclick="return addComment.moveForm( &quot;comment-365158&quot;, &quot;365158&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Vishal">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-365227" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-365227" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">September 22, 2016 at 8:05 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365227" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I don’t know if it is clear or just unreliable. But it is gone. </p>
<p>Your network will not behave as you expect.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365227#respond" onclick="return addComment.moveForm( &quot;comment-365227&quot;, &quot;365227&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-365199" class="comment odd alt thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-365199" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/0e46fd92818e28a9bea206d013b96e18" srcset="http://0.gravatar.com/avatar/0e46fd92818e28a9bea206d013b96e18?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://n/A" rel="external nofollow" class="url">Arnold</a></span>
	                <span class="date">September 21, 2016 at 10:43 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365199" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason, </p>
<p>first, thanks for the amazing tutorial!</p>
<p>I got two quick questions:</p>
<p>   1) if I want to train “LSTM with Variable Length Input to One-Char Output” on much simpler sequence (with inserted repetitive pattern):</p>
<p>seq_1 = “aaaabbbccdaaaabbbccdaaaabbbccd….”</p>
<p>or even </p>
<p>se1_2 = “ababababababababababababababab…”</p>
<p>I can’t do any better than 50% of accuracy. What’s wrong?</p>
<p>   2) If I want to amend your code to N-Char-Output, how is it possible? So, given a sequence “abcd” -&gt; “ef” ?</p>
<p>Many thanks in advance!</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365199#respond" onclick="return addComment.moveForm( &quot;comment-365199&quot;, &quot;365199&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Arnold">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-365200" class="comment even depth-2">

	      	<div id="li-comment-365200" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/0e46fd92818e28a9bea206d013b96e18" srcset="http://0.gravatar.com/avatar/0e46fd92818e28a9bea206d013b96e18?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://n/A" rel="external nofollow" class="url">Arnold</a></span>
	                <span class="date">September 21, 2016 at 10:56 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365200" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I found my mistake: the char-integer encoding should be:</p>
<p>chars = sorted(list(set(alphabet)))<br>
char_to_int = dict((c, i) for i, c in enumerate(chars))<br>
int_to_char = dict((i, c) for i, c in enumerate(chars))</p>
<p>but, it does not help too much.</p>
<p>Also, I’m very curious to know how to predict N-characters</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365200#respond" onclick="return addComment.moveForm( &quot;comment-365200&quot;, &quot;365200&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Arnold">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-365235" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2 parent">

	      	<div id="li-comment-365235" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">September 22, 2016 at 8:13 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365235" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Arnold,</p>
<p>Nice change. No idea why it’s not learning it. Perhaps you need more nodes/layers or longer training? Maybe stateful or stateless?<br>
Perhaps it’s the framing of the problem?</p>
<p>This is a sequence to sequence problem. I expect you can just change the output node from 1 neuron to the number you would like.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365235#respond" onclick="return addComment.moveForm( &quot;comment-365235&quot;, &quot;365235&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-365499" class="comment even depth-3 parent">

	      	<div id="li-comment-365499" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/0e46fd92818e28a9bea206d013b96e18" srcset="http://0.gravatar.com/avatar/0e46fd92818e28a9bea206d013b96e18?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Arnold</span>
	                <span class="date">September 25, 2016 at 8:55 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365499" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason, </p>
<p>Thanks for your suggestions. I will try.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365499#respond" onclick="return addComment.moveForm( &quot;comment-365499&quot;, &quot;365499&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Arnold">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-367640" class="comment odd alt depth-4">

	      	<div id="li-comment-367640" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/491b706b68d04115e827a07b5c12e9b7" srcset="http://1.gravatar.com/avatar/491b706b68d04115e827a07b5c12e9b7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Riccardo Folloni</span>
	                <span class="date">October 20, 2016 at 9:02 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-367640" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Arnold,</p>
<p>have you acheived that kind of implementation? <img draggable="false" class="emoji" alt="🙂" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1f642.svg"><br>
i’m also interested</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=367640#respond" onclick="return addComment.moveForm( &quot;comment-367640&quot;, &quot;367640&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Riccardo Folloni">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-365202" class="comment even thread-even depth-1">

	      	<div id="li-comment-365202" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/0e46fd92818e28a9bea206d013b96e18" srcset="http://0.gravatar.com/avatar/0e46fd92818e28a9bea206d013b96e18?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Arnold</span>
	                <span class="date">September 21, 2016 at 11:47 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-365202" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason, </p>
<p>Thanks for the amazing tutorial and other posts!</p>
<p>How to amend your code to predict N-next characters and not only one?</p>
<p>something like: “LSTM with Variable Length Input to N-Char Output”</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=365202#respond" onclick="return addComment.moveForm( &quot;comment-365202&quot;, &quot;365202&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Arnold">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-366259" class="comment odd alt thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-366259" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/d0ae7a3d906b223fc7508a5b02ee6b64" srcset="http://1.gravatar.com/avatar/d0ae7a3d906b223fc7508a5b02ee6b64?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Madhav</span>
	                <span class="date">October 4, 2016 at 5:59 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-366259" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,</p>
<p>Great tutorial as always. It was fun to run through your code line by line, work with a smaller alphabet (like “ABCDE”), change the sequence length etc just to figure out how the model behaves. I think I’m growing fond of LSTMs these days.</p>
<p>I have a very basic question about the shape of the input tensor. Keras requires our input to have the form [samples, time_steps, features]. Could you tell me what the attribute features exactly means? </p>
<p>Also, consider a scenario for training an LSTM network for binary classification of audio. Suppose I have a collection of 1000 files and for each file, I have extracted 13 features (MFCC values). Also suppose that every file is 500 frames long and I set the time_steps to 1.</p>
<p>What would be my input shape?</p>
<p>1. [Number of files, time_steps, features] = [1000, 1, 13]</p>
<p>or</p>
<p>2. [Number of files * frames_per_file, time_steps, features] = [1000*500, 1, 13]</p>
<p>Any answer is greatly appreciated !! Thanks.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=366259#respond" onclick="return addComment.moveForm( &quot;comment-366259&quot;, &quot;366259&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Madhav">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-366292" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-366292" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">October 5, 2016 at 8:27 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-366292" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks Madhav.</p>
<p>The features in the input refers to attributes or columns in your data.</p>
<p>Yes, your framing of the problem looks right to me [1000, 1, 13] or [samples, timesteps, features]</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=366292#respond" onclick="return addComment.moveForm( &quot;comment-366292&quot;, &quot;366292&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-367829" class="comment odd alt thread-even depth-1 parent">

	      	<div id="li-comment-367829" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/82c3c40c4a831f67ea18b0cb5511a914" srcset="http://2.gravatar.com/avatar/82c3c40c4a831f67ea18b0cb5511a914?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Rob</span>
	                <span class="date">October 22, 2016 at 12:31 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-367829" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you for the enlightening series of articles on LSTMs!<br>
Just a minor detail, the complete code for the final example is missing an import for pad_sequences:<br>
from keras.preprocessing.sequence import pad_sequences</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=367829#respond" onclick="return addComment.moveForm( &quot;comment-367829&quot;, &quot;367829&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Rob">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-367862" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-367862" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">October 22, 2016 at 7:02 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-367862" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Fixed.</p>
<p>Thanks for pointing that out Rob!</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=367862#respond" onclick="return addComment.moveForm( &quot;comment-367862&quot;, &quot;367862&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-369822" class="comment odd alt thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-369822" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/b60348768efe1a794030dc279addfabd" srcset="http://2.gravatar.com/avatar/b60348768efe1a794030dc279addfabd?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Panand</span>
	                <span class="date">November 8, 2016 at 2:00 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-369822" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hello Jason</p>
<p>What if I want to predict a non sequential network.(eg:- the next state of A may be B,C,Z or A itself depending on  the previous values before A). Can I use this same logic for that problem?</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=369822#respond" onclick="return addComment.moveForm( &quot;comment-369822&quot;, &quot;369822&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Panand">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-369869" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-369869" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">November 8, 2016 at 9:55 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-369869" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Yes Panand, LSTMs can learn arbitrary complex sequences, although you may need to scale up memory units and layers to account for problem complexity.</p>
<p>Let me know how you go.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=369869#respond" onclick="return addComment.moveForm( &quot;comment-369869&quot;, &quot;369869&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-370722" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-370722" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/175d01f2db965995995aaa618032e3e4" srcset="http://1.gravatar.com/avatar/175d01f2db965995995aaa618032e3e4?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Veronica</span>
	                <span class="date">November 16, 2016 at 4:21 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-370722" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,<br>
Thank you for your tutorials, I learn a lot from them.<br>
However, I still don’t quite understand the meaning of batch size. In the last example you set batch_size to be 1, but the network still learned the next letter in the sequence based on the whole sequence, or was it just based on the last letter every time?<br>
What would have happened if you set batch_size=3 and all the sequences would be at minimal length 3?<br>
Thank you</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=370722#respond" onclick="return addComment.moveForm( &quot;comment-370722&quot;, &quot;370722&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Veronica">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-375188" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-375188" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/3b36675bfa41523ad4e9d253800cf02f" srcset="http://0.gravatar.com/avatar/3b36675bfa41523ad4e9d253800cf02f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Manisha</span>
	                <span class="date">December 14, 2016 at 6:16 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-375188" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason ,</p>
<p>Thank you for this wonderful tutorial.<br>
Motivated by this I got myself trying to generate a sine wave using RNN in theano</p>
<p>After running the code below</p>
<p> the sine curve predicted in green is generated well when I give an input to all the time steps at prediction</p>
<p>but the curve in blue is not predicted well where I give the input to only the first time step while prediction (This kind of prediction is you have used for character sequence generation)</p>
<p>Is there a way I could make that work. Cause I need a model for generating captions.</p>
<p>#Learning Sine wave<br>
import theano<br>
import numpy as np<br>
import matplotlib.pyplot as plt<br>
import theano.tensor as T<br>
import math<br>
theano.config.floatX = ‘float64’</p>
<p>##  data<br>
step_radians = 0.01<br>
steps_of_history = 200<br>
steps_in_future = 1<br>
index = 0</p>
<p>x = np.sin(np.arange(0, 20*math.pi, step_radians))</p>
<p>seq = []<br>
next_val = []</p>
<p>for i in range(0, len(x)-steps_of_history, steps_of_history):<br>
    seq.append(x[i: i + steps_of_history])<br>
    next_val.append(x[i+1:i + steps_of_history+1])</p>
<p>seq = np.reshape(seq, [-1, steps_of_history, 1])<br>
next_val = np.reshape(next_val, [-1, steps_of_history, 1])</p>
<p>trainX = np.array(seq)<br>
trainY = np.array(next_val)</p>
<p>## model<br>
n = 50<br>
nin = 1<br>
nout = 1</p>
<p>u = T.matrix()</p>
<p>t = T.matrix()</p>
<p>h0 = T.vector()<br>
h_in = np.zeros(n).astype(theano.config.floatX)<br>
lr = T.scalar()</p>
<p>W = theano.shared(np.random.uniform(size=(3,n, n), low=-.01, high=.01).astype(theano.config.floatX))<br>
W_in = theano.shared(np.random.uniform(size=(nin, n), low=-.01, high=.01).astype(theano.config.floatX))<br>
W_out = theano.shared(np.random.uniform(size=(n, nout), low=-.01, high=.01).astype(theano.config.floatX))</p>
<p>def step(u_t, h_tm1, W, W_in, W_out):<br>
	h_t = T.tanh(T.dot(u_t, W_in) + T.dot(h_tm1, W[0]))<br>
	h_t1 = T.tanh(T.dot(h_t, W[1]) + T.dot(h_tm1, W[2]))<br>
    	y_t = T.dot(h_t1, W_out)<br>
    	return h_t, y_t</p>
<p>[h, y], _ = theano.scan(step,<br>
                        sequences=u,<br>
                        outputs_info=[h0, None],<br>
                        non_sequences=[W, W_in, W_out])</p>
<p>error = ((y – t) ** 2).sum()<br>
prediction = y<br>
gW, gW_in, gW_out = T.grad(error, [W, W_in, W_out])</p>
<p>fn = theano.function([h0, u, t, lr],<br>
                     error,<br>
                     updates={W: W – lr * gW,<br>
                             W_in: W_in – lr * gW_in,<br>
                             W_out: W_out – lr * gW_out})<br>
predict = theano.function([h0, u], prediction)</p>
<p>for e in range(10):<br>
	for i in range(len(trainX)):<br>
		fn(h_in,trainX[i],trainY[i],0.001)</p>
<p>print(‘End of training’)</p>
<p>x = np.sin(np.arange(20*math.pi, 24*math.pi, step_radians))</p>
<p>seq = []</p>
<p>for i in range(0, len(x)-steps_of_history, steps_of_history):<br>
    seq.append(x[i: i + steps_of_history])</p>
<p>seq = np.reshape(seq, [-1, steps_of_history, 1])<br>
testX = np.array(seq)</p>
<p># Predict the future values<br>
predictY = []<br>
for i in range(len(testX)):<br>
	p = testX[i][0].reshape(1,1)<br>
	for j in range(len(testX[i])):<br>
		p = predict(h_in, p)<br>
		predictY= predictY + p.tolist()<br>
print(predictY)<br>
# Plot the results</p>
<p>plt.plot(x, ‘r-‘, label=’Actual’)<br>
plt.plot(np.asarray(predictY), ‘gx’, label=’Predicted’)<br>
predictY = []<br>
for i in range(len(testX)):<br>
	predictY= predictY + predict(h_in, testX[i]).tolist()<br>
plt.plot(np.asarray(predictY), ‘bo’, label=’Predicted’)</p>
<p>plt.show()</p>
<p>Many Thanks</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=375188#respond" onclick="return addComment.moveForm( &quot;comment-375188&quot;, &quot;375188&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Manisha">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-375916" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-375916" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/a6f2fe83e615fc585661f0fc281db77d" srcset="http://1.gravatar.com/avatar/a6f2fe83e615fc585661f0fc281db77d?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Louis Abraham</span>
	                <span class="date">December 19, 2016 at 4:11 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-375916" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi,</p>
<p>I think there is a mistake in the paragraph “LSTM State Within A Batch”.<br>
You say “The Keras implementation of LSTMs resets the state of the network after each batch.”.<br>
But the fact is that it resets its state event between the inputs of a batch.<br>
You can see the poor performances (around .5) of this LSTM that tries to remember its last input : <a href="http://pastebin.com/u5NnAx9r" rel="nofollow">http://pastebin.com/u5NnAx9r</a></p>
<p>As a comparison, here is a stateful LSTM that performs well : <a href="http://pastebin.com/qEKBVqJJ" rel="nofollow">http://pastebin.com/qEKBVqJJ</a></p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=375916#respond" onclick="return addComment.moveForm( &quot;comment-375916&quot;, &quot;375916&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Louis Abraham">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-378783" class="comment even thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-378783" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/715c0d8daf0f8ab959923bbef25955d3" srcset="http://1.gravatar.com/avatar/715c0d8daf0f8ab959923bbef25955d3?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Mazen</span>
	                <span class="date">December 30, 2016 at 8:26 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-378783" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you very much.<br>
It is the best description I’ve ever seen about LSTM. I got a lot of benefits from your post!</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=378783#respond" onclick="return addComment.moveForm( &quot;comment-378783&quot;, &quot;378783&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Mazen">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-378904" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-378904" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">December 31, 2016 at 7:03 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-378904" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks Mazen.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=378904#respond" onclick="return addComment.moveForm( &quot;comment-378904&quot;, &quot;378904&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-382502" class="comment even thread-even depth-1 parent">

	      	<div id="li-comment-382502" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/3e7670f99caf88a98f45853147678fee" srcset="http://0.gravatar.com/avatar/3e7670f99caf88a98f45853147678fee?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Fernando</span>
	                <span class="date">January 17, 2017 at 4:05 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-382502" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>First of all, thaks for create this easy but very useful example to learn and understand better how the LSTM nets work.</p>
<p>I just want to ask you something about the first part, why do we use 32 units? was it a random decision or does it have a theoric fundament?</p>
<p>I will thank you your answer.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=382502#respond" onclick="return addComment.moveForm( &quot;comment-382502&quot;, &quot;382502&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Fernando">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-382537" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-382537" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">January 17, 2017 at 7:41 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-382537" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>An ad hoc choice Fernando. Great question.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=382537#respond" onclick="return addComment.moveForm( &quot;comment-382537&quot;, &quot;382537&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-382659" class="comment even thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-382659" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/63e5c02aa1601e858855189d0e5a37d6" srcset="http://0.gravatar.com/avatar/63e5c02aa1601e858855189d0e5a37d6?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">leila</span>
	                <span class="date">January 18, 2017 at 12:51 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-382659" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,</p>
<p>thanks for the amazing tutorial!</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=382659#respond" onclick="return addComment.moveForm( &quot;comment-382659&quot;, &quot;382659&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to leila">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-382741" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-382741" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">January 18, 2017 at 10:16 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-382741" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I’m glad you found it useful leila.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=382741#respond" onclick="return addComment.moveForm( &quot;comment-382741&quot;, &quot;382741&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-383930" class="comment even thread-even depth-1 parent">

	      	<div id="li-comment-383930" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/98724999c49dcb4e93c095ba080458d2" srcset="http://0.gravatar.com/avatar/98724999c49dcb4e93c095ba080458d2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">floyd</span>
	                <span class="date">January 25, 2017 at 2:16 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-383930" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you for this post but i am a beginner and i have a question<br>
you said “the state of the network is reset after each pattern” what does that mean?</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=383930#respond" onclick="return addComment.moveForm( &quot;comment-383930&quot;, &quot;383930&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to floyd">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-384014" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-384014" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">January 25, 2017 at 10:07 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-384014" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>LSTMs maintain an internal state, it is a benefit of using them.</p>
<p>This internal state can be reset automatically (after each batch) or manually when setting the “stateful” argument.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=384014#respond" onclick="return addComment.moveForm( &quot;comment-384014&quot;, &quot;384014&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-393210" class="comment even thread-odd thread-alt depth-1 parent">

	      	<div id="li-comment-393210" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/bfb93f7c355edfcc674711277cbb2088" srcset="http://2.gravatar.com/avatar/bfb93f7c355edfcc674711277cbb2088?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">atmaere</span>
	                <span class="date">March 18, 2017 at 8:38 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-393210" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Great tutorial. Question: Is it possible to do a stateful LSTM with variable input (like the last example in the tutorial)? I am curious why you used a naive stateless LSTM for that.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=393210#respond" onclick="return addComment.moveForm( &quot;comment-393210&quot;, &quot;393210&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to atmaere">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-393254" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-393254" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">March 19, 2017 at 6:10 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-393254" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Yes you can.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=393254#respond" onclick="return addComment.moveForm( &quot;comment-393254&quot;, &quot;393254&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-395238" class="comment even thread-even depth-1 parent">

	      	<div id="li-comment-395238" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/2160843c93f5f33180394bfa85b4d2a1" srcset="http://2.gravatar.com/avatar/2160843c93f5f33180394bfa85b4d2a1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name">Bikram Gupta</span>
	                <span class="date">April 3, 2017 at 1:25 pm</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-395238" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you for the amazing tutorial. The walkthrough (starting with simple and building on it) really helped.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=395238#respond" onclick="return addComment.moveForm( &quot;comment-395238&quot;, &quot;395238&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Bikram Gupta">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-395329" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-395329" class="comment-container">

					                <div class="avatar"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(1)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href="http://machinelearningmastery.com/" rel="external nofollow" class="url">Jason Brownlee</a></span>
	                <span class="date">April 4, 2017 at 9:12 am</span>
	                <span class="perma"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#comment-395329" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You’re welcome Bikram.</p>

				
	                <div class="reply">
	                    <a rel="nofollow" class="comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/?replytocom=395329#respond" onclick="return addComment.moveForm( &quot;comment-395329&quot;, &quot;395329&quot;, &quot;respond&quot;, &quot;2941&quot; )" aria-label="Reply to Jason Brownlee">Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>
		 	</div>	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#respond" style="display:none;">Click here to cancel reply.</a></small></h3>			<form action="http://machinelearningmastery.com/wp-comments-post.php?wpe-comment-post=mlmastery" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" value="" size="30" aria-required="true"><label for="author">Name <span class="required">(required)</span></label> </p>
<p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" value="" size="30" aria-required="true"><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p>
<p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" value="" size="30"><label for="url">Website</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment"> <input type="hidden" name="comment_post_ID" value="2941" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="5becee915a"></p><p style="display: none;"></p>			<input type="hidden" id="ak_js" name="ak_js" value="1493011035939"></form>
			</div><!-- #respond -->
	     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><h3>Welcome to Machine Learning Mastery</h3><span class="left"><img alt="" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/1d75d46040c28497f0dee5d8e100db37(2)" srcset="http://1.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=200&amp;d=mm&amp;r=g 2x" class="avatar avatar-100 photo" height="100" width="100"></span>
<p>Hi, I'm Dr. Jason Brownlee.
<br>
My goal is to make practitioners like YOU awesome at applied machine learning.</p>
<p><a href="http://machinelearningmastery.com/about">Read More</a></p>
<div class="fix"></div>
</div><div id="text-6" class="widget widget_text">			<div class="textwidget"><p></p><center><p></p>
<h3>Finally Get Started With Deep Learning</h3>
<p>Sick of the fancy math and need for super computers?<br>
Looking for step-by-step tutorials?<br>
Want end-to-end projects?</p>
<p><a href="https://machinelearningmastery.com/deep-learning-with-python/">Get Started With Deep Learning in Python Today!</a><br>
<a href="https://machinelearningmastery.com/deep-learning-with-python/"><img src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/DeepLearningWithPython-220.png"></a><br>
</p></center><p></p>
</div>
		</div>
		<div id="woo_tabs-2" class="widget widget_woo_tabs"> 		<div id="tabs">

            <ul class="wooTabs">
                                <li class="popular"><a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#tab-pop" class="selected">Popular</a></li>                                                            </ul>

            <div class="clear"></div>

            <div class="boxes box inside">

	            
                                <ul id="tab-pop" class="list" style="display: block;">
                    	<li>
		<a href="http://machinelearningmastery.com/time-series-prediction-lstm-recurrent-neural-networks-python-keras/" title="Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Time-Series-Prediction-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras-150x150.jpg" class="thumbnail wp-post-image" alt="Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras" title="Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras"></a>		<a title="Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras" href="http://machinelearningmastery.com/time-series-prediction-lstm-recurrent-neural-networks-python-keras/">Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras</a>
		<span class="meta">July 21, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/tutorial-first-neural-network-python-keras/" title="Develop Your First Neural Network in Python With Keras Step-By-Step"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Tour-of-Deep-Learning-Algorithms-150x150.jpg" class="thumbnail wp-post-image" alt="Tour of Deep Learning Algorithms" title="Develop Your First Neural Network in Python With Keras Step-By-Step"></a>		<a title="Develop Your First Neural Network in Python With Keras Step-By-Step" href="http://machinelearningmastery.com/tutorial-first-neural-network-python-keras/">Develop Your First Neural Network in Python With Keras Step-By-Step</a>
		<span class="meta">May 24, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/machine-learning-in-python-step-by-step/" title="Your First Machine Learning Project in Python Step-By-Step"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Your-First-Machine-Learning-Project-in-Python-Step-By-Step-150x150.jpg" class="thumbnail wp-post-image" alt="Your First Machine Learning Project in Python Step-By-Step" title="Your First Machine Learning Project in Python Step-By-Step"></a>		<a title="Your First Machine Learning Project in Python Step-By-Step" href="http://machinelearningmastery.com/machine-learning-in-python-step-by-step/">Your First Machine Learning Project in Python Step-By-Step</a>
		<span class="meta">June 10, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/sequence-classification-lstm-recurrent-neural-networks-python-keras/" title="Sequence Classification with LSTM Recurrent Neural Networks in Python with Keras"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Sequence-Classification-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras-150x150.jpg" class="thumbnail wp-post-image" alt="Sequence Classification with LSTM Recurrent Neural Networks in Python with Keras" title="Sequence Classification with LSTM Recurrent Neural Networks in Python with Keras"></a>		<a title="Sequence Classification with LSTM Recurrent Neural Networks in Python with Keras" href="http://machinelearningmastery.com/sequence-classification-lstm-recurrent-neural-networks-python-keras/">Sequence Classification with LSTM Recurrent Neural Networks in Python with Keras</a>
		<span class="meta">July 26, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/how-to-run-your-first-classifier-in-weka/" title="How to Run Your First Classifier in Weka"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/weka-zeror-150x150.png" class="thumbnail wp-post-image" alt="Weka Results for the ZeroR algorithm on the Iris flower dataset" title="How to Run Your First Classifier in Weka"></a>		<a title="How to Run Your First Classifier in Weka" href="http://machinelearningmastery.com/how-to-run-your-first-classifier-in-weka/">How to Run Your First Classifier in Weka</a>
		<span class="meta">February 17, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/tutorial-to-implement-k-nearest-neighbors-in-python-from-scratch/" title="Tutorial To Implement k-Nearest Neighbors in Python From Scratch"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/k-Nearest-Neighbors-algorithm-150x150.png" class="thumbnail wp-post-image" alt="k-Nearest Neighbors algorithm" title="Tutorial To Implement k-Nearest Neighbors in Python From Scratch"></a>		<a title="Tutorial To Implement k-Nearest Neighbors in Python From Scratch" href="http://machinelearningmastery.com/tutorial-to-implement-k-nearest-neighbors-in-python-from-scratch/">Tutorial To Implement k-Nearest Neighbors in Python From Scratch</a>
		<span class="meta">September 12, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/a-tour-of-machine-learning-algorithms/" title="A Tour of Machine Learning Algorithms"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/ensemble-150x150.png" class="thumbnail wp-post-image" alt="Ensemble Learning Method" title="A Tour of Machine Learning Algorithms"></a>		<a title="A Tour of Machine Learning Algorithms" href="http://machinelearningmastery.com/a-tour-of-machine-learning-algorithms/">A Tour of Machine Learning Algorithms</a>
		<span class="meta">November 25, 2013</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/multi-class-classification-tutorial-keras-deep-learning-library/" title="Multi-Class Classification Tutorial with the Keras Deep Learning Library"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Multi-Class-Classification-Tutorial-with-the-Keras-Deep-Learning-Library-150x150.jpg" class="thumbnail wp-post-image" alt="Multi-Class Classification Tutorial with the Keras Deep Learning Library" title="Multi-Class Classification Tutorial with the Keras Deep Learning Library"></a>		<a title="Multi-Class Classification Tutorial with the Keras Deep Learning Library" href="http://machinelearningmastery.com/multi-class-classification-tutorial-keras-deep-learning-library/">Multi-Class Classification Tutorial with the Keras Deep Learning Library</a>
		<span class="meta">June 2, 2016</span>
		<div class="fix"></div>
	</li>
		<li>
		<a href="http://machinelearningmastery.com/regression-tutorial-keras-deep-learning-library-python/" title="Regression Tutorial with the Keras Deep Learning Library in Python"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/Regression-Tutorial-with-Keras-Deep-Learning-Library-in-Python-150x150.jpg" class="thumbnail wp-post-image" alt="Regression Tutorial with Keras Deep Learning Library in Python" title="Regression Tutorial with the Keras Deep Learning Library in Python"></a>		<a title="Regression Tutorial with the Keras Deep Learning Library in Python" href="http://machinelearningmastery.com/regression-tutorial-keras-deep-learning-library-python/">Regression Tutorial with the Keras Deep Learning Library in Python</a>
		<span class="meta">June 9, 2016</span>
		<div class="fix"></div>
	</li>
		<li style="border-bottom: 0px;">
		<a href="http://machinelearningmastery.com/naive-bayes-classifier-scratch-python/" title="How To Implement Naive Bayes From Scratch in Python"><img width="45" height="45" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/naive-bayes-classifier-150x150.jpg" class="thumbnail wp-post-image" alt="naive bayes classifier" title="How To Implement Naive Bayes From Scratch in Python"></a>		<a title="How To Implement Naive Bayes From Scratch in Python" href="http://machinelearningmastery.com/naive-bayes-classifier-scratch-python/">How To Implement Naive Bayes From Scratch in Python</a>
		<span class="meta">December 8, 2014</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                                
            </div><!-- /.boxes -->

        </div><!-- /wooTabs -->

        </div>         </aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			<p>© 2017 Machine Learning Mastery. All Rights Reserved. </p>		</div>

		<div id="credit" class="col-right">
			<p></p><p>
<a href="http://machinelearningmastery.com/privacy/">Privacy</a> | 
<a href="http://machinelearningmastery.com/contact/">Contact</a> |
<a href="http://machinelearningmastery.com/about/">About</a>
</p><p></p>		</div>

	</footer>

	
	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<!-- Drip Code -->
<script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '9556588';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/9556588.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script><!-- Woo Tabs Widget -->
<script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/form.js"></script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/comment-reply.min.js"></script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/wp-embed.min.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var fsb = {"ajax":"http:\/\/machinelearningmastery.com\/wp-admin\/admin-ajax.php","nonce":"0c784686db"};
/* ]]> */
</script>
<script type="text/javascript" src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/fsb.js"></script>

<div class="swiftype-widget"><div class="autocomplete" style="position: absolute; z-index: 9999; top: 106px; left: 731.609px; width: 406px; display: none;"><ul></ul></div></div><div style="position: absolute; right: 0px; left: 0px; bottom: 0px; top: 0px; z-index: 2147483646; background: black; width: 100%; opacity: 0.5; display: none; height: 30485px;"></div><iframe src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/saved_resource.html" style="position: absolute; left: 0px; top: 0px; width: 100%; display: none; border: none; z-index: 2147483647; height: 679px;"></iframe><iframe src="./Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras - Machine Learning Mastery_files/saved_resource(1).html" style="position: absolute; left: 0px; top: 0px; width: 100%; display: none; border: none; z-index: 2147483647; height: 679px;"></iframe><div class="drip-tab-container">
  <div id="drip-2211" class="drip-tab bottom right no-image">
    <div id="drip-header-2211" class="drip-header">
      <a href="http://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/#" id="drip-toggle-2211" class="drip-toggle">
        <h2 id="drip-teaser-2211">Get Your Start in Machine Learning</h2>
        <span id="drip-tab-up-2211" class="drip-arrow up">
          <svg width="12px" height="8px" viewBox="1362 659 12 8" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <polygon id="right_angle" stroke="none" fill="#FFFFFF" fill-rule="evenodd" transform="translate(1368.000000, 662.703125) rotate(-90.000000) translate(-1368.000000, -662.703125) " points="1364.29688 667.296875 1368.89062 662.703125 1364.29688 658.109375 1365.70312 656.703125 1371.70312 662.703125 1365.70312 668.703125"></polygon>
          </svg>
        </span>
        <span id="drip-tab-down-2211" class="drip-arrow down" style="display: none"></span>
      </a>
    </div>

    <div id="drip-content-2211" class="drip-content drip-clearfix" style="height: auto; bottom: -518px;">
      <div id="drip-form-panel-2211" class="drip-panel" style="display: block;">
        <a id="drip-close-2211" class="drip-close">×</a>
        <h3 id="drip-content-header-2211">Get Your Start in Machine Learning</h3>
        <div id="drip-scroll-2211" class="drip-scroll">
          <div class="drip-clearfix">
            
            <div class="drip-description">You can master applied Machine Learning&nbsp;<br>
<strong>without the math or fancy degree</strong>.<br>
Find out how in this <em>free</em>&nbsp;and <em>practical</em> email course.</div>
          </div>
          <form id="drip-form-2211">
            <div style="display: none">
              <input type="hidden" name="form_id" value="2211">
            </div>
            <dl class="no-labels">
              
                <dt>Email Address</dt>
                <dd class="drip-clearfix">
                  
                    <input type="email" name="fields[email]" value="" placeholder="Email Address" class="drip-text-field">
                    <div id="drip-errors-for-email-2211" class="drip-errors"></div>
                  
                </dd>
              
            </dl>
            <div class="form-controls">
              <input type="submit" name="submit" value="Start My Email Course" id="drip-submit-2211" class="drip-submit-button">
            </div>
          </form>
        </div>
      </div>

      <div id="drip-success-panel-2211" class="drip-success drip-panel drip-clearfix" style="display: none">
        <a id="drip-hide-2211" class="drip-close">×</a>
        <h3>Thank you for signing up!</h3>
        <p class="drip-description">Please check your email and click the link provided to confirm your subscription.</p>
      </div>

      
    </div>
  </div>
</div></body></html>