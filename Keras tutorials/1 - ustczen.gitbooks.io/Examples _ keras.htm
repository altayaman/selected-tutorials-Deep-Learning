<!DOCTYPE html>
<!-- saved from url=(0055)https://ustczen.gitbooks.io/keras/content/examples.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        
        
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Examples | keras</title>
        
        <meta name="description" content="">
        <meta name="generator" content="GitBook 2.1.0">
        <meta name="author" content="ustczen">
        
        <meta name="HandheldFriendly" content="true">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-status-bar-style" content="black">
        <link rel="apple-touch-icon-precomposed" sizes="152x152" href="https://ustczen.gitbooks.io/keras/content/gitbook/images/apple-touch-icon-precomposed-152.png">
        <link rel="shortcut icon" href="https://ustczen.gitbooks.io/keras/content/gitbook/images/favicon.ico" type="image/x-icon">
        
    <link rel="stylesheet" href="./Examples _ keras_files/style.css">
    
    

        
    
    
    <link rel="next" href="https://ustczen.gitbooks.io/keras/content/optimizers.html">
    
    
    <link rel="prev" href="https://ustczen.gitbooks.io/keras/content/index.html">
    

        
    </head>
    <body>
        
        
    <div class="book without-animation with-summary font-size-2 font-family-1" data-level="1" data-basepath="." data-revision="Tue Jul 07 2015 10:35:24 GMT+0000 (UTC)">
    

<div class="book-summary">
    <div class="book-search">
        <input type="text" placeholder="Type to search" class="form-control">
    </div>
    <ul class="summary">
        
        
        
            
            <li>
                <a href="https://www.gitbook.com/book/ustczen/keras" target="blank" class="custom-link">keras</a>
            </li>
        
        

        
        <li class="divider"></li>
        

        
    
        <li class="chapter  done" data-level="0" data-path="index.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/index.html">
                        <i class="fa fa-check"></i>
                        
                        Introduction
                    </a>
                
            
            
        </li>
    
        <li class="chapter active done" data-level="1" data-path="examples.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/examples.html">
                        <i class="fa fa-check"></i>
                        
                            <b>1.</b>
                        
                        Examples
                    </a>
                
            
            
        </li>
    
        <li class="chapter  done" data-level="2" data-path="optimizers.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/optimizers.html">
                        <i class="fa fa-check"></i>
                        
                            <b>2.</b>
                        
                        Optimizers
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="3" data-path="objectives.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/objectives.html">
                        <i class="fa fa-check"></i>
                        
                            <b>3.</b>
                        
                        Objectives
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="4" data-path="models.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/models.html">
                        <i class="fa fa-check"></i>
                        
                            <b>4.</b>
                        
                        Models
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="5" data-path="activations.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/activations.html">
                        <i class="fa fa-check"></i>
                        
                            <b>5.</b>
                        
                        Activations
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="6" data-path="initializations.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/initializations.html">
                        <i class="fa fa-check"></i>
                        
                            <b>6.</b>
                        
                        Initializations
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="7" data-path="regularizers.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/regularizers.html">
                        <i class="fa fa-check"></i>
                        
                            <b>7.</b>
                        
                        Regularizers
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="8" data-path="constraints.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/constraints.html">
                        <i class="fa fa-check"></i>
                        
                            <b>8.</b>
                        
                        Constraints
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="9" data-path="callbacks.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/callbacks.html">
                        <i class="fa fa-check"></i>
                        
                            <b>9.</b>
                        
                        Callbacks
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="10" data-path="datasets.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/datasets.html">
                        <i class="fa fa-check"></i>
                        
                            <b>10.</b>
                        
                        Datasets
                    </a>
                
            
            
        </li>
    
        <li class="chapter  done" data-level="11" data-path="layers/core.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/core.html">
                        <i class="fa fa-check"></i>
                        
                            <b>11.</b>
                        
                        Layers, Core Layers
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="12" data-path="layers/convolutional.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/convolutional.html">
                        <i class="fa fa-check"></i>
                        
                            <b>12.</b>
                        
                        Layers, Convolutional Layers
                    </a>
                
            
            
        </li>
    
        <li class="chapter  done" data-level="13" data-path="layers/recurrent.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/recurrent.html">
                        <i class="fa fa-check"></i>
                        
                            <b>13.</b>
                        
                        Layers, Recurrent Layers
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="14" data-path="layers/advanced_activations.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/advanced_activations.html">
                        <i class="fa fa-check"></i>
                        
                            <b>14.</b>
                        
                        Layers, Advanced Activations Layers
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="15" data-path="layers/normalization.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/normalization.html">
                        <i class="fa fa-check"></i>
                        
                            <b>15.</b>
                        
                        Layers, Normalization Layers
                    </a>
                
            
            
        </li>
    
        <li class="chapter  done" data-level="16" data-path="layers/embeddings.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/embeddings.html">
                        <i class="fa fa-check"></i>
                        
                            <b>16.</b>
                        
                        Layers, Embedding Layers
                    </a>
                
            
            
        </li>
    
        <li class="chapter  done" data-level="17" data-path="layers/containers.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/layers/containers.html">
                        <i class="fa fa-check"></i>
                        
                            <b>17.</b>
                        
                        Layers, Containers
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="18" data-path="preprocessing/sequence.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/preprocessing/sequence.html">
                        <i class="fa fa-check"></i>
                        
                            <b>18.</b>
                        
                        Preprocessing, Sequence Preprocessing
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="19" data-path="preprocessing/text.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/preprocessing/text.html">
                        <i class="fa fa-check"></i>
                        
                            <b>19.</b>
                        
                        Preprocessing, Text Preprocessing
                    </a>
                
            
            
        </li>
    
        <li class="chapter" data-level="20" data-path="preprocessing/image.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/preprocessing/image.html">
                        <i class="fa fa-check"></i>
                        
                            <b>20.</b>
                        
                        Preprocessing, Image Preprocessing
                    </a>
                
            
            
        </li>
    
        <li class="chapter  done" data-level="21" data-path="utils/visualization.html">
            
                
                    <a href="https://ustczen.gitbooks.io/keras/content/utils/visualization.html">
                        <i class="fa fa-check"></i>
                        
                            <b>21.</b>
                        
                        Utils, Visualization Utilities
                    </a>
                
            
            
        </li>
    


        
        <li class="divider"></li>
        <li>
            <a href="https://www.gitbook.com/" target="blank" class="gitbook-link">
                Published with GitBook
            </a>
        </li>
        
    </ul>
</div>

    <div class="book-body">
        <div class="body-inner">
            <div class="book-header">
    <!-- Actions Left -->
    <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" class="btn pull-left toggle-summary" aria-label="Table of Contents"><i class="fa fa-align-justify"></i></a>
    <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" class="btn pull-left toggle-search" aria-label="Search"><i class="fa fa-search"></i></a>
    
    <div id="font-settings-wrapper" class="dropdown pull-left">
        <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" class="btn toggle-dropdown" aria-label="Font Settings"><i class="fa fa-font"></i>
        </a>
        <div class="dropdown-menu font-settings">
    <div class="dropdown-caret">
        <span class="caret-outer"></span>
        <span class="caret-inner"></span>
    </div>

    <div class="buttons">
        <button type="button" id="reduce-font-size" class="button size-2">A</button>
        <button type="button" id="enlarge-font-size" class="button size-2">A</button>
    </div>

    <div class="buttons font-family-list">
        <button type="button" data-font="0" class="button">Serif</button>
        <button type="button" data-font="1" class="button">Sans</button>
    </div>

    <div class="buttons color-theme-list">
        <button type="button" id="color-theme-preview-0" class="button size-3" data-theme="0">White</button>
        <button type="button" id="color-theme-preview-1" class="button size-3" data-theme="1">Sepia</button>
        <button type="button" id="color-theme-preview-2" class="button size-3" data-theme="2">Night</button>
    </div>
</div>

    </div>

    <!-- Actions Right -->
    
    <div class="dropdown pull-right">
        <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" class="btn toggle-dropdown" aria-label="Share"><i class="fa fa-share-alt"></i>
        </a>
        <div class="dropdown-menu font-settings dropdown-left">
            <div class="dropdown-caret">
                <span class="caret-outer"></span>
                <span class="caret-inner"></span>
            </div>
            <div class="buttons">
                <button type="button" data-sharing="twitter" class="button">
                    Share on Twitter
                </button>
                <button type="button" data-sharing="google-plus" class="button">
                    Share on Google
                </button>
                <button type="button" data-sharing="facebook" class="button">
                    Share on Facebook
                </button>
                <button type="button" data-sharing="weibo" class="button">
                    Share on Weibo
                </button>
                <button type="button" data-sharing="instapaper" class="button">
                    Share on Instapaper
                </button>
            </div>
        </div>
    </div>
    

    
    <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" target="_blank" class="btn pull-right google-plus-sharing-link sharing-link" data-sharing="google-plus" aria-label="Google"><i class="fa fa-google-plus"></i></a>
    
    
    <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" target="_blank" class="btn pull-right facebook-sharing-link sharing-link" data-sharing="facebook" aria-label="Facebook"><i class="fa fa-facebook"></i></a>
    
    
    <a href="https://ustczen.gitbooks.io/keras/content/examples.html#" target="_blank" class="btn pull-right twitter-sharing-link sharing-link" data-sharing="twitter" aria-label="Twitter"><i class="fa fa-twitter"></i></a>
    
    
    


    <!-- Title -->
    <h1>
        <i class="fa fa-circle-o-notch fa-spin"></i>
        <a href="https://ustczen.gitbooks.io/keras/content/">keras</a>
    </h1>
</div>

            <div class="page-wrapper" tabindex="-1">
                <div class="page-inner">
                
                
                    <section class="normal" id="section-">
                    
                        <p>Here are a few examples to get you started!</p>
<h3 id="multilayer-perceptron-mlp">Multilayer Perceptron (MLP)</h3>
<pre><code class="lang-python"><span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
<span class="hljs-keyword">from</span> keras.layers.core <span class="hljs-keyword">import</span> Dense, Dropout, Activation
<span class="hljs-keyword">from</span> keras.optimizers <span class="hljs-keyword">import</span> SGD

model = Sequential()
model.add(Dense(<span class="hljs-number">20</span>, <span class="hljs-number">64</span>, init=<span class="hljs-string">'uniform'</span>))
model.add(Activation(<span class="hljs-string">'tanh'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))
model.add(Dense(<span class="hljs-number">64</span>, <span class="hljs-number">64</span>, init=<span class="hljs-string">'uniform'</span>))
model.add(Activation(<span class="hljs-string">'tanh'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))
model.add(Dense(<span class="hljs-number">64</span>, <span class="hljs-number">2</span>, init=<span class="hljs-string">'uniform'</span>))
model.add(Activation(<span class="hljs-string">'softmax'</span>))

sgd = SGD(lr=<span class="hljs-number">0.1</span>, decay=<span class="hljs-number">1e-6</span>, momentum=<span class="hljs-number">0.9</span>, nesterov=<span class="hljs-keyword">True</span>)
model.compile(loss=<span class="hljs-string">'mean_squared_error'</span>, optimizer=sgd)

model.fit(X_train, y_train, nb_epoch=<span class="hljs-number">20</span>, batch_size=<span class="hljs-number">16</span>)
score = model.evaluate(X_test, y_test, batch_size=<span class="hljs-number">16</span>)
</code></pre>
<hr>
<h3 id="alternative-implementation-of-mlp">Alternative implementation of MLP</h3>
<pre><code class="lang-python">model = Sequential()
model.add(Dense(<span class="hljs-number">20</span>, <span class="hljs-number">64</span>, init=<span class="hljs-string">'uniform'</span>, activation=<span class="hljs-string">'tanh'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))
model.add(Dense(<span class="hljs-number">64</span>, <span class="hljs-number">64</span>, init=<span class="hljs-string">'uniform'</span>, activation=<span class="hljs-string">'tanh'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))
model.add(Dense(<span class="hljs-number">64</span>, <span class="hljs-number">2</span>, init=<span class="hljs-string">'uniform'</span>, activation=<span class="hljs-string">'softmax'</span>)

sgd = SGD(lr=<span class="hljs-number">0.1</span>, decay=<span class="hljs-number">1e-6</span>, momentum=<span class="hljs-number">0.9</span>, nesterov=<span class="hljs-keyword">True</span>)
model.compile(loss=<span class="hljs-string">'mean_squared_error'</span>, optimizer=sgd)
</code></pre>
<hr>
<h3 id="vgg-like-convnet">VGG-like convnet</h3>
<pre><code class="lang-python"><span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
<span class="hljs-keyword">from</span> keras.layers.core <span class="hljs-keyword">import</span> Dense, Dropout, Activation, Flatten
<span class="hljs-keyword">from</span> keras.layers.convolutional <span class="hljs-keyword">import</span> Convolution2D, MaxPooling2D
<span class="hljs-keyword">from</span> keras.optimizers <span class="hljs-keyword">import</span> SGD

model = Sequential()
model.add(Convolution2D(<span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, border_mode=<span class="hljs-string">'full'</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Convolution2D(<span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>))
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(MaxPooling2D(poolsize=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
model.add(Dropout(<span class="hljs-number">0.25</span>))

model.add(Convolution2D(<span class="hljs-number">64</span>, <span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, border_mode=<span class="hljs-string">'full'</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Convolution2D(<span class="hljs-number">64</span>, <span class="hljs-number">64</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(MaxPooling2D(poolsize=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))
model.add(Dropout(<span class="hljs-number">0.25</span>))

model.add(Flatten())
model.add(Dense(<span class="hljs-number">64</span>*<span class="hljs-number">8</span>*<span class="hljs-number">8</span>, <span class="hljs-number">256</span>))
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))

model.add(Dense(<span class="hljs-number">256</span>, <span class="hljs-number">10</span>))
model.add(Activation(<span class="hljs-string">'softmax'</span>))

sgd = SGD(lr=<span class="hljs-number">0.1</span>, decay=<span class="hljs-number">1e-6</span>, momentum=<span class="hljs-number">0.9</span>, nesterov=<span class="hljs-keyword">True</span>)
model.compile(loss=<span class="hljs-string">'categorical_crossentropy'</span>, optimizer=sgd)

model.fit(X_train, Y_train, batch_size=<span class="hljs-number">32</span>, nb_epoch=<span class="hljs-number">1</span>)
</code></pre>
<hr>
<h3 id="sequence-classification-with-lstm">Sequence classification with LSTM</h3>
<pre><code class="lang-python"><span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Sequential
<span class="hljs-keyword">from</span> keras.layers.core <span class="hljs-keyword">import</span> Dense, Dropout, Activation
<span class="hljs-keyword">from</span> keras.layers.embeddings <span class="hljs-keyword">import</span> Embedding
<span class="hljs-keyword">from</span> keras.layers.recurrent <span class="hljs-keyword">import</span> LSTM

model = Sequential()
model.add(Embedding(max_features, <span class="hljs-number">256</span>))
model.add(LSTM(<span class="hljs-number">256</span>, <span class="hljs-number">128</span>, activation=<span class="hljs-string">'sigmoid'</span>, inner_activation=<span class="hljs-string">'hard_sigmoid'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))
model.add(Dense(<span class="hljs-number">128</span>, <span class="hljs-number">1</span>))
model.add(Activation(<span class="hljs-string">'sigmoid'</span>))

model.compile(loss=<span class="hljs-string">'binary_crossentropy'</span>, optimizer=<span class="hljs-string">'rmsprop'</span>)

model.fit(X_train, Y_train, batch_size=<span class="hljs-number">16</span>, nb_epoch=<span class="hljs-number">10</span>)
score = model.evaluate(X_test, Y_test, batch_size=<span class="hljs-number">16</span>)
</code></pre>
<hr>
<h3 id="architecture-for-learning-image-captions-with-a-convnet-and-a-gated-recurrent-unit">Architecture for learning image captions with a convnet and a Gated Recurrent Unit</h3>
<p>(word-level embedding, caption of maximum length 16 words).</p>
<p>Note that getting this to actually "work" will require using a bigger convnet, initialized with pre-trained weights.
Displaying readable results will also require an embedding decoder.</p>
<pre><code class="lang-python">max_caption_len = <span class="hljs-number">16</span>

model = Sequential()
model.add(Convolution2D(<span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, border_mode=<span class="hljs-string">'full'</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Convolution2D(<span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>))
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(MaxPooling2D(poolsize=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))

model.add(Convolution2D(<span class="hljs-number">64</span>, <span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, border_mode=<span class="hljs-string">'full'</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Convolution2D(<span class="hljs-number">64</span>, <span class="hljs-number">64</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(MaxPooling2D(poolsize=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))

model.add(Convolution2D(<span class="hljs-number">128</span>, <span class="hljs-number">64</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, border_mode=<span class="hljs-string">'full'</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Convolution2D(<span class="hljs-number">128</span>, <span class="hljs-number">128</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>)) 
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(MaxPooling2D(poolsize=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)))

model.add(Flatten())
model.add(Dense(<span class="hljs-number">128</span>*<span class="hljs-number">4</span>*<span class="hljs-number">4</span>, <span class="hljs-number">256</span>))
model.add(Activation(<span class="hljs-string">'relu'</span>))
model.add(Dropout(<span class="hljs-number">0.5</span>))

model.add(Repeat(max_caption_len)) 
<span class="hljs-comment"># the GRU below returns sequences of max_caption_len vectors of size 256 (our word embedding size)</span>
model.add(GRU(<span class="hljs-number">256</span>, <span class="hljs-number">256</span>, return_sequences=<span class="hljs-keyword">True</span>))

model.compile(loss=<span class="hljs-string">'mean_squared_error'</span>, optimizer=<span class="hljs-string">'rmsprop'</span>)

<span class="hljs-comment"># "images" is a numpy array of shape (nb_samples, nb_channels=3, width, height) </span>
<span class="hljs-comment"># "captions" is a numpy array of shape (nb_samples, max_caption_len=16, embedding_dim=256)</span>
<span class="hljs-comment"># captions are supposed already embedded (dense vectors).</span>
model.fit(images, captions, batch_size=<span class="hljs-number">16</span>, nb_epoch=<span class="hljs-number">100</span>)
</code></pre>
<hr>
<p>In the <a href="https://github.com/fchollet/keras/tree/master/examples" target="_blank">examples folder</a>, you will find example models for real datasets:</p>
<ul>
<li>CIFAR10 small images classification: Convnet with realtime data augmentation</li>
<li>IMDB movie review sentiment classification: LSTM over sequences of words</li>
<li>Reuters newswires topic classification: Multilayer Perceptron</li>
</ul>

                    
                    </section>
                
                
                </div>
            </div>
        </div>

        
        <a href="https://ustczen.gitbooks.io/keras/content/index.html" class="navigation navigation-prev " aria-label="Previous page: Introduction"><i class="fa fa-angle-left"></i></a>
        
        
        <a href="https://ustczen.gitbooks.io/keras/content/optimizers.html" class="navigation navigation-next " aria-label="Next page: Optimizers" style="margin-right: 0px;"><i class="fa fa-angle-right"></i></a>
        
    </div>
</div>

        
<script async="" src="./Examples _ keras_files/analytics.js"></script><script src="./Examples _ keras_files/app.js"></script>

<script>
require(["gitbook"], function(gitbook) {
    var config = {"fontSettings":{"theme":null,"family":"sans","size":2}};
    gitbook.start(config);
});
</script>

        
    
<div><script style="display: none;" type="application/javascript">
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-57505611-7', 'auto', {name: 'microcdn'});
  ga('microcdn.send', 'pageview');

  var _cdn_prev_loc = window.location.pathname;
  window.setInterval(function () {
    if (window.location.pathname !== _cdn_prev_loc) {
      _cdn_prev_loc = window.location.pathname;
      ga('microcdn.send', 'pageview');
    }
  }, 100);

</script></div>

    

</body></html>